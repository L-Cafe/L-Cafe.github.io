<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.7.3">Jekyll</generator><link href="https://l1cafe.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://l1cafe.github.io/" rel="alternate" type="text/html" /><updated>2018-06-09T13:29:28+02:00</updated><id>https://l1cafe.github.io/</id><title type="html">L1Cafe</title><subtitle>Software, infosec, system administration projects, opinions and tips.</subtitle><author><name>León Castillejos</name><email>L1Cafe-github@tuta.io</email></author><entry><title type="html">x86 Function call conventions</title><link href="https://l1cafe.github.io/2018/06/09/function-calls" rel="alternate" type="text/html" title="x86 Function call conventions" /><published>2018-06-09T11:57:04+02:00</published><updated>2018-06-09T11:57:04+02:00</updated><id>https://l1cafe.github.io/2018/06/09/function-calls</id><content type="html" xml:base="https://l1cafe.github.io/2018/06/09/function-calls">&lt;p&gt;Another cybersecurity post. Focused on binary (dis)assembly.&lt;/p&gt;

&lt;p&gt;This time it’s about how different compilers turn high-level programming language code into low-level assembly code, in regards to function calling.&lt;/p&gt;

&lt;p&gt;As a sample, I’ll use a pseudocode call like &lt;code class=&quot;highlighter-rouge&quot;&gt;test(a,b,c,d)&lt;/code&gt; to demonstrate how it would look like in regards to different conventions.&lt;/p&gt;

&lt;p&gt;Keep in mind &lt;code class=&quot;highlighter-rouge&quot;&gt;push&lt;/code&gt; is a pseudoinstruction that subtracts 4 from the stack pointer (ESP), and then writes the value onto the memory ESP points to. &lt;code class=&quot;highlighter-rouge&quot;&gt;pop&lt;/code&gt; is the opposite: reads from the address ESP points to, and then adds 4.&lt;/p&gt;

&lt;h1 id=&quot;cdecl&quot;&gt;cdecl&lt;/h1&gt;

&lt;p&gt;It’s used by many C compilers.&lt;/p&gt;

&lt;p&gt;In Linux, the GNU Compiler Collection (GCC) sets the cdecl de facto standard.&lt;/p&gt;

&lt;h2 id=&quot;conditions&quot;&gt;Conditions&lt;/h2&gt;

&lt;p&gt;The registers ST0 through ST7 are empty when calling a function.&lt;/p&gt;

&lt;p&gt;ST1 through ST7 are empty upon exiting a function, and if no floating point is returned, ST0 is empty too.&lt;/p&gt;

&lt;h2 id=&quot;arguments-and-return-values&quot;&gt;Arguments and return values&lt;/h2&gt;

&lt;p&gt;Arguments are passed on the stack, right-to-left (C style).&lt;/p&gt;

&lt;p&gt;For returns, integers and memory addresses are in EAX, whereas floating points will be in the ST0 x87 register.&lt;/p&gt;

&lt;h2 id=&quot;clean-up&quot;&gt;Clean-up&lt;/h2&gt;

&lt;p&gt;Registers EAX, ECX and EDX are caller-saved, and the rest are callee-saved.&lt;/p&gt;

&lt;h2 id=&quot;pseudocode-assembly&quot;&gt;Pseudocode assembly&lt;/h2&gt;

&lt;div class=&quot;language-nasm highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;push&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;push&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;push&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;push&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;call&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;test&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The result will be in EAX, and floating point values in ST*.&lt;/p&gt;

&lt;h1 id=&quot;syscall&quot;&gt;syscall&lt;/h1&gt;

&lt;p&gt;Similar to cdecl.&lt;/p&gt;

&lt;p&gt;It’s the convention for the 32 bit OS/2 API.&lt;/p&gt;

&lt;h2 id=&quot;arguments-and-return-values-1&quot;&gt;Arguments and return values&lt;/h2&gt;

&lt;p&gt;Arguments are passed on the stack, right-to-left (C style). The size of the parameter list in doublewords is passed in AL.&lt;/p&gt;

&lt;p&gt;Return values are in EAX.&lt;/p&gt;

&lt;h2 id=&quot;clean-up-1&quot;&gt;Clean-up&lt;/h2&gt;

&lt;p&gt;ECX, and EDX are cleared upon exiting the function call.&lt;/p&gt;

&lt;h2 id=&quot;pseudocode-assembly-1&quot;&gt;Pseudocode assembly&lt;/h2&gt;

&lt;div class=&quot;language-nasm highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;mov&lt;/span&gt;   &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;al&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;push&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;push&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;push&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;push&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;call&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;test&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The result will be in EAX, and floating point values in ST*.&lt;/p&gt;

&lt;h1 id=&quot;microsoft-fastcall&quot;&gt;Microsoft fastcall&lt;/h1&gt;

&lt;p&gt;This convention is better than the previous two in terms of performance, hence its “fast” prefix.&lt;/p&gt;

&lt;p&gt;However, the fastcall convention is not standarised, and varies a lot from compiler to compiler, so I’ll focus in the Microsoft implementation. In this case, GCC’s &lt;code class=&quot;highlighter-rouge&quot;&gt;__msfastcall&lt;/code&gt; is similar.&lt;/p&gt;

&lt;h2 id=&quot;arguments-and-return-values-2&quot;&gt;Arguments and return values&lt;/h2&gt;

&lt;p&gt;First two arguments are passed left-to-right into ECX and EDX. The remaining arguments are pushed onto the stack from right to left.&lt;/p&gt;

&lt;p&gt;Microsoft compilers behave differently for IA64 and AMD64 architectures, because of additional registers. They simply use their own x64 calling convention, regardless of what was specified to the compiler.&lt;/p&gt;

&lt;h2 id=&quot;clean-up-2&quot;&gt;Clean-up&lt;/h2&gt;

&lt;p&gt;The callee is responsible for cleaning the stack.&lt;/p&gt;

&lt;h2 id=&quot;pseudocode-assembly-2&quot;&gt;Pseudocode assembly&lt;/h2&gt;

&lt;div class=&quot;language-nasm highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;mov&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ecx&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;mov&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;edx&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;push&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;push&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;call&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;test&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The result will be in EAX, and floating point values in ST*.&lt;/p&gt;</content><author><name>León Castillejos</name><email>L1Cafe-github@tuta.io</email></author><category term="Cybersecurity" /><category term="software-rev" /><category term="assembly" /><category term="x86" /><summary type="html">Another cybersecurity post. Focused on binary (dis)assembly.</summary></entry><entry><title type="html">Static analysis tools for Windows</title><link href="https://l1cafe.github.io/2018/06/08/windows-static" rel="alternate" type="text/html" title="Static analysis tools for Windows" /><published>2018-06-08T13:08:50+02:00</published><updated>2018-06-08T13:08:50+02:00</updated><id>https://l1cafe.github.io/2018/06/08/windows-static</id><content type="html" xml:base="https://l1cafe.github.io/2018/06/08/windows-static">&lt;p&gt;I’m currently studying malware analysis, so I wanted to write a post on the tools I’ve been using recently, to serve as a reference for me and hopefully for anyone interested in binary reversing.&lt;/p&gt;

&lt;p&gt;Some tools will have functionality that overlaps with other of the listed tools. It’s up to you which one to use.&lt;/p&gt;

&lt;h1 id=&quot;free-tools&quot;&gt;Free tools&lt;/h1&gt;

&lt;p&gt;Either fully open source, or freeware (unrestricted, so no shareware).&lt;/p&gt;

&lt;h2 id=&quot;dependency-walker&quot;&gt;&lt;a href=&quot;http://dependencywalker.com/&quot;&gt;Dependency Walker&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Displays a hierarchical tree diagram of all dependent module, with exported, and imported functions.&lt;/p&gt;

&lt;h2 id=&quot;filealyzer&quot;&gt;&lt;a href=&quot;https://www.safer-networking.org/products/filealyzer/&quot;&gt;FileAlyzer&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Application with functionality to show resources, PE headers, hex dumps, INI contents, and more. It can read UPX compressed files, ELF (Linux) as well as regular DLL and EXE files.&lt;/p&gt;

&lt;h2 id=&quot;hxd&quot;&gt;&lt;a href=&quot;https://mh-nexus.de/en/hxd/&quot;&gt;HxD&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Hexadecimal editor. Everyone has their own favourite, but this one works well and is free.&lt;/p&gt;

&lt;h2 id=&quot;malcode-analyst-pack&quot;&gt;&lt;a href=&quot;http://www.sandsprite.com/iDef/MAP/&quot;&gt;Malcode Analyst Pack&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Pack containing lots of useful software and added functionality to aid in static analysis. Among other utilities, it installs shell extensions (that appear upon right-clicking files and folders) for computing MD5 tools, or showing the strings on a file.&lt;/p&gt;

&lt;h2 id=&quot;pebrowse&quot;&gt;&lt;a href=&quot;http://www.smidgeonsoft.prohosting.com/pebrowse-pro-file-viewer.html&quot;&gt;PEBrowse&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Windows disassembler for 64 and 32 bit programs. Presents the PE structure, with its headers, imports, exports, debug symbols and more in an intuitive GUI. Comes with helpful tools such as hex/ASCII equivalents, window messages and error codes. It also displays metadata for .NET assemblies.&lt;/p&gt;

&lt;h2 id=&quot;peid&quot;&gt;PEiD&lt;/h2&gt;

&lt;p&gt;Detects common packers, cryptors and compilers for PE files.&lt;/p&gt;

&lt;p&gt;The official website seems to have been discontinued, but you can download it &lt;a href=&quot;https://L1Cafe.github.io/assets/other/PEiD-0.95.zip&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;pev&quot;&gt;&lt;a href=&quot;http://pev.sourceforge.net/&quot;&gt;pev&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Command-line open source tool to analyse PE files. Runs on Windows, macOS and Linux.&lt;/p&gt;

&lt;h2 id=&quot;peview&quot;&gt;&lt;a href=&quot;http://wjradburn.com/software/&quot;&gt;PEView&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Shows the structure of a PE and COFF file, dispalying headers, sections, import/export tables, and resource information in file types such as EXE and DLL.&lt;/p&gt;

&lt;h2 id=&quot;resource-hacker&quot;&gt;&lt;a href=&quot;http://angusj.com/resourcehacker/&quot;&gt;Resource Hacker&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Shows resources, such as images, dialogs, executables and binaries embedded in PE files such as EXE and DLL.&lt;/p&gt;

&lt;h2 id=&quot;radare2&quot;&gt;&lt;a href=&quot;http://www.radare.org/r/&quot;&gt;Radare2&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Better known for its dynamic analysis capabilities, it is also capable of performing binary diffing, extract relocation tables, and of course disassemble binaries written in multiple languages for many different architectures.&lt;/p&gt;

&lt;h2 id=&quot;sysinternals-suite&quot;&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/sysinternals/downloads/sysinternals-suite&quot;&gt;Sysinternals Suite&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Not exactly a tool, but a collection of tools, as the name implies.&lt;/p&gt;

&lt;p&gt;Here are a few interesting ones:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Sigcheck&lt;/strong&gt;: Shows file version number, timestamp and digital signature details, and optionally allows for VirusTotal sample uploads.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Strings&lt;/strong&gt;: Shows hardcoded strings in an executable file.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Whois&lt;/strong&gt;: Similar to the Unix tool, shows details on a given Internet address. Maybe you want to investigate a certain string pointing to a domain?&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;upx&quot;&gt;&lt;a href=&quot;https://upx.github.io/&quot;&gt;UPX&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Very popular executable packer used by malware authors. You can unpack some UPX-packed executables by supplying the command-line option &lt;code class=&quot;highlighter-rouge&quot;&gt;-d&lt;/code&gt; to the &lt;code class=&quot;highlighter-rouge&quot;&gt;upx&lt;/code&gt; tool.&lt;/p&gt;

&lt;h1 id=&quot;paid-tools&quot;&gt;Paid tools&lt;/h1&gt;

&lt;h2 id=&quot;pe-explorer&quot;&gt;&lt;a href=&quot;http://heaventools.com/&quot;&gt;PE Explorer&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Resource editor, UPX unpacker, disassembler, dependency scanner and more.&lt;/p&gt;

&lt;h2 id=&quot;pestudio&quot;&gt;&lt;a href=&quot;https://winitor.com/&quot;&gt;PEStudio&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;PEStudio implements very useful features aimed to help detecting anomalies and suspicious patterns. It ships with VirusTotal functionality that queries the service for MD5 hashes of a file. It also list imports and resources. Ships with both a GUI and CLI versions.&lt;/p&gt;</content><author><name>León Castillejos</name><email>L1Cafe-github@tuta.io</email></author><category term="Cybersecurity" /><category term="Microsoft" /><category term="software-rev" /><category term="static-analysis" /><summary type="html">I’m currently studying malware analysis, so I wanted to write a post on the tools I’ve been using recently, to serve as a reference for me and hopefully for anyone interested in binary reversing.</summary></entry><entry><title type="html">The power of silence</title><link href="https://l1cafe.github.io/2018/06/04/silence" rel="alternate" type="text/html" title="The power of silence" /><published>2018-06-04T04:43:31+02:00</published><updated>2018-06-04T04:43:31+02:00</updated><id>https://l1cafe.github.io/2018/06/04/silence</id><content type="html" xml:base="https://l1cafe.github.io/2018/06/04/silence">&lt;p&gt;I find silence to be grossly underestimated. We live in an era of permanent distraction. Companies use loud, aggressive marketing in the form of advertisements to grab your attention and get you to buy whatever it is they’re selling. Our smartphones have become distraction devices that instead of boosting our productivity, and increase our focus, are loaded of applications that send notifications indiscriminately, connecting us to real-time events instantly.&lt;/p&gt;

&lt;p&gt;Over time, we have been lured as a society towards a new norm of instant information and notifications, and as individuals, it has become increasingly more difficult to enjoy silence and quietness in our daily lives. The rise of buzzling, cosmopolitan and ecletic cities, full of people and cars all day every day means everything is now more accessible and reachable than ever. We seem to be more connected than ever, at the cost of our personal selves.&lt;/p&gt;

&lt;p&gt;This is clearly torpedoing our deep focus ability and impacting our mental performance. That’s why silence sanctuaries have been created, such as libraries, and noise pollution laws regulate and restrict noise in different areas and times of the day. This has lead to warning signs that constantly remind us of remaining quiet in these silence zones.&lt;/p&gt;

&lt;p&gt;We need silence to focus and relax. In fact, noise pollution can have a tremendously negative impact in our health, and knowingly or not, we contribute to generating noise every day. It is urgent that we learn to accept and appreciate silence. For the benefit of our community and our own selves.&lt;/p&gt;

&lt;p&gt;Richard Yates said: “Never say anything that doesn’t improve on silence.”, and that’s a great start. I try to keep small talk and non-constructive criticism away, as I don’t believe they bring anything of value. But I also try not to make noise, in general, when, for example, moving furniture, or when having a phone conversation (that is, I don’t maintain conversations in small, enclosed spaces, like buses or trains).&lt;/p&gt;

&lt;p&gt;“The quieter you become, the more you can hear.” - Ram Dass.&lt;/p&gt;</content><author><name>León Castillejos</name><email>L1Cafe-github@tuta.io</email></author><category term="opinion" /><summary type="html">I find silence to be grossly underestimated. We live in an era of permanent distraction. Companies use loud, aggressive marketing in the form of advertisements to grab your attention and get you to buy whatever it is they’re selling. Our smartphones have become distraction devices that instead of boosting our productivity, and increase our focus, are loaded of applications that send notifications indiscriminately, connecting us to real-time events instantly.</summary></entry><entry><title type="html">Comments enabled!</title><link href="https://l1cafe.github.io/2018/05/26/enabled-comments" rel="alternate" type="text/html" title="Comments enabled!" /><published>2018-05-26T23:10:50+02:00</published><updated>2018-05-26T23:10:50+02:00</updated><id>https://l1cafe.github.io/2018/05/26/enabled-comments</id><content type="html" xml:base="https://l1cafe.github.io/2018/05/26/enabled-comments">&lt;p&gt;The blog now supports comments!&lt;/p&gt;

&lt;p&gt;They’re human-reviewed, so inappropriate comments will not be published.&lt;/p&gt;

&lt;p&gt;And the best part is that they’re fully static comments. No JavaScript required, no tracking plugins and no external comment systems!&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://staticman.net/&quot;&gt;Staticman&lt;/a&gt; is truly awesome.&lt;/p&gt;

&lt;p&gt;Give it a try if you want, but please don’t comment spam or garbage.&lt;/p&gt;</content><author><name>León Castillejos</name><email>L1Cafe-github@tuta.io</email></author><summary type="html">The blog now supports comments!</summary></entry><entry><title type="html">Productivity</title><link href="https://l1cafe.github.io/2018/05/20/productivity" rel="alternate" type="text/html" title="Productivity" /><published>2018-05-20T18:20:50+02:00</published><updated>2018-05-20T18:20:50+02:00</updated><id>https://l1cafe.github.io/2018/05/20/productivity</id><content type="html" xml:base="https://l1cafe.github.io/2018/05/20/productivity">&lt;p&gt;In the past, I used to struggle with my productivity, no matter how hard I
seemed to study, my grades didn’t reflect it. I was quite stubborn in believing
I wasn’t at fault, like some kind of genius who nobody understood, and reading
quotes like this one certainly didn’t help me understand it was actually my
problem. I was in denial.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2018-05-20-productivity/a.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;For years, I simply resorted to blame the “unfair education system” that was
“grading my performance on subjective exams”.&lt;/p&gt;

&lt;p&gt;While in general I was a visual learner and had much better results with
topics based on practice rather than an abstract understanding of the field,
like what happens in Math. It’s also true I was not applying the best
methodologies and wasting a lot of time in general.&lt;/p&gt;

&lt;p&gt;I’ve learned a lot in the last years and I’ve managed to drastically change how
I approach learning, resulting in much better performance. It wasn’t easy, and
I’m still tuning a lot of behaviours and situations that aren’t adequately
handled yet, but I’ve come a long way, from being one of the lowest graded
students to being one of the best graded students, often the top in some
subjects.&lt;/p&gt;

&lt;p&gt;It took effort and dedication, but the results are so worth it.&lt;/p&gt;

&lt;p&gt;My inspiration began with the following video:&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube-nocookie.com/embed/E7jWLtdnlfM?rel=0&quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;Scott Young, the author, is one of the most brilliant minds I’ve ever known, and
his dedication to learning and improving productivity have always fascinated me.
Near the end of the post, I’ll recommend some great books he has published on
becoming a better learner, and improving productivity in general that have
helped me achieve my goals enormously.&lt;/p&gt;

&lt;p&gt;Like him, I’ve always loved computers. Ever since I was 5 years old, I was sure
I wanted to become a computer engineer. And Computer Science is one of the
hardest routes you can take in education, just like pursuing pure math,
theoretical physics, or medicine degrees. Science in general, is not for
everybody. It requires passion, dedication, and curiosity. When I watched that
video, my grades were already at an all-time-low, with no signs of ever
recovering, so I needed to take action.&lt;/p&gt;

&lt;p&gt;I hope my experience and trajectory will help others achieve their goals in life
no matter what they are currently studying. This is why I wanted to share this
with you.&lt;/p&gt;

&lt;h1 id=&quot;what-doesnt-work&quot;&gt;What doesn’t work&lt;/h1&gt;

&lt;h2 id=&quot;spending-entire-afternoons-in-the-library&quot;&gt;Spending entire afternoons in the library&lt;/h2&gt;

&lt;p&gt;Some people are lead to believe (and I was too) that spending lots of hours in
the library will eventually lead to good grades, the problem is that, let’s be
honest, nobody likes being trapped in a building, just to force themselves to
read their books and assignments over and over again, with the hope of magically
recalling it in the middle of the exam. It just doesn’t work:&lt;/p&gt;

&lt;h3 id=&quot;its-been-scientifically-proven-that-the-human-brain-cant-focus-for-long-periods-of-time-in-a-task&quot;&gt;It’s been scientifically proven that the human brain can’t focus for long periods of time in a task&lt;/h3&gt;

&lt;p&gt;Even geniuses like &lt;a href=&quot;https://staciechoice1010.wordpress.com/2014/08/08/focused-vs-diffused-mode/&quot;&gt;Salvador Dalí&lt;/a&gt;
took advantage of the way our brains work to vastly improve their learning
abilities by taking short breaks and making use of the focused and diffused
modes of the brain.&lt;/p&gt;

&lt;h3 id=&quot;willpower-is-not-unlimited&quot;&gt;Willpower is not unlimited&lt;/h3&gt;

&lt;p&gt;Unfortunately, no matter how committed you are to simply not check your cellphone
during study hours (or just wander off watching the birds fly or the kids
playing in the street), that will not work. What will end up happening is you
getting very tired, and associating studying with excruciating work that you
really want to avoid. So instead of relying on willpower to achieve your goals,
you must learn to use your time effectively.&lt;/p&gt;

&lt;h2 id=&quot;using-multiple-colours-to-mark-your-notes&quot;&gt;Using multiple colours to mark your notes&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2018-05-20-productivity/colour-coding.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Some “experts” recommend you use different highlighter marker pens to “decorate”
your notebook, and highlight the important features in a text. While it looks
great, it also does not work at all. Reading, re-reading and marking your notes
will do nothing for you, because it’s a passive action that requires little to
no effort by you, just like reading a newspaper.&lt;/p&gt;

&lt;h2 id=&quot;studying-in-groups&quot;&gt;Studying in groups&lt;/h2&gt;

&lt;p&gt;This is also a technique I used to apply, but I eventually realised it was
extremely detrimental to my performance. Let me be clear: the problem is not
the group itself, or the people, it’s the methodology  applied when studying in
a group. If all the members in the group are applying suboptimal studying
techniques, you’ll end up inadvertently acquiring them as well. Especially if
any member in the group is a smoker, what will end up happening is he’ll want to
smoke, and pull members of the group with him to “take a break”. Breaks that
will end up taking 30 or 45 minutes. Seems like a waste of time.&lt;/p&gt;

&lt;h2 id=&quot;relying-only-on-brute-force-memory&quot;&gt;Relying only on brute-force memory&lt;/h2&gt;

&lt;p&gt;Trying to cram an entire subject in memory will often result in failure. There
are some talented individuals with photographic memory that can manage it, but
in general it’s not a smart technique, especially because you’ll forget
everything after the exam.&lt;/p&gt;

&lt;h2 id=&quot;energy-drinks-and-sugary-caffeinated-beverages&quot;&gt;Energy drinks and sugary, caffeinated beverages&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2018-05-20-productivity/monster-energy.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Of course they taste great, they are specifically designed for that!
And they promise energy and focus for athletes, what could go wrong? Well,
actually, many things.
&lt;a href=&quot;https://www.frontiersin.org/articles/10.3389/fpubh.2014.00134/full&quot;&gt;Very reputable sources&lt;/a&gt;
have long been wary of the adverse health effects these beverages produce. Even
if they are socially acceptable, they still contain acid, insane amounts of
sugar, and big quantities of caffeine that harm your body. Do your own research
and come to your own conclusions. I’ve personally banned energy drinks from my
life, and may only occasionally consume a cup of coffee every now and then. But
not because I’m a coffee-junkie and I “need” my cup of coffee in the morning.&lt;/p&gt;

&lt;h2 id=&quot;denial&quot;&gt;Denial&lt;/h2&gt;

&lt;p&gt;Like I was many years ago. Just living in denial and blaming everyone else for
my own bad results. Teachers, the education system, politicians… It’s not
going to help anybody, and it’s especially not going to help you achieve your
goals.&lt;/p&gt;

&lt;h1 id=&quot;what-did-work&quot;&gt;What did work&lt;/h1&gt;

&lt;p&gt;In my years of applying wrong and correct techniques, coming up with my own
ones, researching, and reading books on the topic, I’ve been able to discern the
positive or negative results they bring, and here are a few of them&lt;/p&gt;

&lt;h2 id=&quot;interval-working&quot;&gt;Interval-working&lt;/h2&gt;

&lt;p&gt;Like I said before, working endlessly on a project will only lead to a drastic
performance decrease the more continued time you spend focused in it. A very
efficient method, however, is dividing the time into small portions
characterised by a constant focus and strong concentration, and small breaks to
activate the diffused mode of the brain.&lt;/p&gt;

&lt;h3 id=&quot;focused-and-diffused-modes&quot;&gt;Focused and diffused modes&lt;/h3&gt;

&lt;p&gt;This is a
&lt;a href=&quot;https://www.brainscape.com/blog/2016/08/better-learning-focused-vs-diffuse-thinking/&quot;&gt;well researched topic&lt;/a&gt;
which can be explained by the ability our brains have to quickly switch
contexts. Apparently, even after you stop focusing on a hard problem, go relax
and read a book, take a walk, or drink some tea, the brain will keep processing
the knowledge in the background, but in a much more diffuse way, which can lead
to breakthroughs in understanding a particularly complex topic.&lt;/p&gt;

&lt;h3 id=&quot;the-pomodoro-technique&quot;&gt;The Pomodoro technique&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2018-05-20-productivity/pomodoro.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;A trademark of
&lt;a href=&quot;https://francescocirillo.com/pages/pomodoro-technique&quot;&gt;Francesco Cirillo&lt;/a&gt;, he
designed and applied a technique that, in short (you can get more information
in the link I provided), designs a time schedule divided in chunks of 25
minutes, followed by short 5 minute breaks, and longer, 20-30 minute breaks
every four intervals. It’s definitely an interesting technique, that takes a bit
of time to get used to. It’s very important you follow the technique as-is, even
if you’re performing great and don’t feel tired.&lt;/p&gt;

&lt;h3 id=&quot;my-own-technique&quot;&gt;My own technique&lt;/h3&gt;

&lt;p&gt;I ended up modifying the Pomodoro technique to adapt it to my way. My way is 60
minutes of focus, deep work, and 15 minutes of relaxation. After every 2 or 3
intervals, I take longer 30-45 minute breaks.&lt;/p&gt;

&lt;h2 id=&quot;chunking-and-recalling&quot;&gt;Chunking and recalling&lt;/h2&gt;

&lt;p&gt;The only effective way to tackle a difficult problem optimally is to break it up
into small, understandable parts. For example, in math, to compute the
determinant of a matrix, first you need to master the Reduced Row Echelon Form,
and learn how the different operations affect the end result of a determinant;
like the swapping of two rows inverting its symbol. Once you have managed all
the small chunks, you can proceed to complete the puzzle, and this time will be
much easier than you remember.&lt;/p&gt;

&lt;p&gt;Recalling refers to trying to remember small amounts of information on a
(chunked) topic. A great example of this are flashcards. This works very well
for remembering historic events, learning foreign languages (particularly those
based in Chinese characters or similar that form words with 1-3 characters
only), or remembering complex physics formulas. Simply write a very concise and
clear question in a piece of paper, and write the answer on the other side. Make
some flashcards and then, try to answer correctly before flipping them to see
the answer. Keep repeating this daily, for just a few minutes (or every few
days), and you’ll see your memory capacity skyrocket.&lt;/p&gt;

&lt;h2 id=&quot;interleaving&quot;&gt;Interleaving&lt;/h2&gt;

&lt;p&gt;Supported on the previous method of chunking, this consists in mixing two
different disciplines (they don’t need to be related), like for example, mixing
linear algebra and algorithm analysis, by studying a 30 minutes of both in each
60 minute sprint before my break. Or maybe study 3 subjects and give each 20
minutes. This works surprisingly well because when you’re working on a different
discipline, new ideas and insights may pop up inadvertently, from the previous
discipline. At first, it will seem really difficult and may even slow you down,
but the secret is that when you’re doing this, you’re interconnecting different
chunks related to different subjects, and physically modifying your brain by
creating neural connections, making it much easier to recall down the road.&lt;/p&gt;

&lt;h2 id=&quot;mnemonics-and-visual-memory&quot;&gt;Mnemonics and “visual memory”&lt;/h2&gt;

&lt;p&gt;When trying to master a difficult topic, brute-force memorising leads to a very
bland understanding of the topic at hand. If instead, you try to come up with
mnemonic rules and apply visual memory to abstract concepts, recalling them
down the road will be much easier, as they will be tied with other memories, and
will form a bigger cluster of chunks.&lt;/p&gt;

&lt;h3 id=&quot;method-of-ioci-memory-palace&quot;&gt;Method of Ioci (memory palace)&lt;/h3&gt;

&lt;p&gt;The method consists in visually imagining a place, like your living
room, bedroom, or bathroom, and embedding knowledge in the environment. For
example: imagine trying to learn European history, on how Adolf Hitler shaped
WWII. What you can do is come up with a big hotel in which each room is a
different year, you open room 1939, and you see the German invasion of Poland,
and you also see how Britain and France declare war on Germany. On room 1940,
Germany invades Denmark and Norway, and bombs London. This way, you can keep
imagining the rooms of the hotel, and even combine it with the flashcard method
for ultra-efficient learning.&lt;/p&gt;

&lt;h2 id=&quot;gather-alternative-material-to-support-your-subjects&quot;&gt;Gather alternative material to support your subjects&lt;/h2&gt;

&lt;p&gt;While a great teacher is often the difference between passing and failing
grades, a better student knows how to research difficult topics to acquire a
broad perspective on it, and complements the classroom learning with excellent
books that support the topic. Teachers will often be happy to provide references
to great books, and some professors will even write books themselves. If you’re
studying on your own, or, for some reason, can’t seem to find adequate material,
you can always look up other universities that teach the subject of your choice
and read the Teaching Guide for bilbiographic references, or simply search for
MOOCs on the topic and try to complete them simultaneously with your lessons.&lt;/p&gt;

&lt;h2 id=&quot;surround-yourself-with-the-best&quot;&gt;Surround yourself with the best&lt;/h2&gt;

&lt;p&gt;Jim Rohn said “You are the average of the five people you spend the most time
with”. And, in a way, if you’re surrounded with average people, it’s going to be
generally easy to stay on top. Things aren’t so easy when your friends are
constantly challenging you intellectually, as you’ll be pushed by peer pressure
to become better at it. It’s a great motivator, and you can learn a lot from
people who know more than you on a certain topic. In fact, sometimes, the
relationship can be symbiotic, in that you know more about a topic X, and they
know more about a topic Y, and so each other’s knowledge complements both
perfectly.&lt;/p&gt;

&lt;h2 id=&quot;abandon-perfection&quot;&gt;Abandon perfection&lt;/h2&gt;

&lt;p&gt;Often times, I found myself striving for such perfection, it got in the way of
my performance. For example, my essays have always been of comparatively high
quality when compared with my classmates. Not only they had a lot of great
content, the presentation was also excellent. The problem here is that I used to
spend way too much time on presentation, even from the very beginning, and I
should have elaborated a short summary of ideas in the form of a quick and dirty
sketch, and improved the visual aspect later down the road, this allows for much
greater flexibility when researching a given topic, and less combined time
worrying about the placement of elements.&lt;/p&gt;

&lt;h2 id=&quot;white-noise&quot;&gt;White noise&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2018-05-20-productivity/white-noise.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I live in a very noisy environment, and often, noises would disturb my focus,
because everything is so quiet, and suddenly even a sheet of paper falling to
the ground is very audible. This is because the brain gets used to the silence,
and when it is broken, it places focus in that new, abnormal event. White noise
improves concentration by raising the noise floor, so that subtle noises get
masked in the continuous stream of white noise. White noise is a random signal
that has the property of having equal intensity at different frequencies. A
great website I contribute to is &lt;a href=&quot;https://mynoise.net/&quot;&gt;myNoise&lt;/a&gt;, which has a
plethora of different noise generators. I particularly really enjoy white noise
mixed with rain noise. But there are so many different generators, you’ll find
the one you prefer.&lt;/p&gt;

&lt;h2 id=&quot;learn-another-language&quot;&gt;Learn another language&lt;/h2&gt;

&lt;p&gt;Especially important for monoglots, speaking two or three languages, often means
you also have to learn the culture of each respective language. For example:
Japanese people are particularly known to be extremely well-mannered, and this
translates directly into the Japanese language, in how imperative forms are used
(it often is not!), as the Japanese people see command forms as very aggressive,
instead, they make requests, even to people of lower social status, like
bosses to their employees.&lt;/p&gt;

&lt;p&gt;Not only it opens your mind to different cultures, and gives you an edge when
trying to work abroad, there are also articles that claim
&lt;a href=&quot;http://www.dailymail.co.uk/sciencetech/article-3164163/It-s-official-Speaking-one-language-makes-smarter-Bilingual-people-grey-matter-know-mother-tongue.html&quot;&gt;being bilingual makes you smarter&lt;/a&gt;
and despite the clearly sensationalist headline, we must not dismiss the facts.&lt;/p&gt;

&lt;p&gt;I invite you to look it up if you’re not entirely convinced!&lt;/p&gt;

&lt;p&gt;I speak Spanish natively, and very fluent English (almost native), and currently
find myself learning Chinese. I believe it’s the language of the future, and I’m
increasingly seeing GitHub repositories entirely written in Chinese. While it’s
somewhat easy for me to read French or Italian, due to their romance roots,
Chinese is completely unlike any other language except Japanese. In fact, I can
read some Japanese words now, and I barely know 50 Chinese hanzi!&lt;/p&gt;

&lt;h2 id=&quot;practicing-sports&quot;&gt;Practicing sports&lt;/h2&gt;

&lt;p&gt;Unsurprisingly, practicing sports brings many benefits, from cardiovascular
performance enhancement, weight loss, endurance enhancement, better sleep, and
many more.&lt;/p&gt;

&lt;p&gt;One of the very important benefits of practicing sports is related to mental
performance,
&lt;a href=&quot;http://www.pnas.org/content/early/2010/01/11/0911725107&quot;&gt;a study shows&lt;/a&gt; that
running enhances learning and promotes synaptic plasticity (which is the
ability of the brain to shift and change its structure, creating new connections
which is essential for learning). And it’s not the only one, there’s tons of
proof that exercising is beneficial, not only to physical wellbeing but also to
the health of the brain. In Latin “Mens sana in corpore sano” means “Healthy
mind in a healthy body”, so this is nothing new. What are you waiting for to hit
the streets today?&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.businessinsider.com/exercise-cardio-brain-body-health-benefits-2017-12&quot;&gt;14 ways one type of exercise is the closest thing to a miracle drug we have&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.health.harvard.edu/blog/regular-exercise-changes-brain-improve-memory-thinking-skills-201404097110&quot;&gt;Regular exercise changes the brain to improve memory, thinking skills&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.active.com/fitness/articles/how-exercise-boosts-your-brainpower&quot;&gt;How Exercise Boosts Your Brainpower&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://brainhealth.utdallas.edu/study-finds-aerobic-exercise-improves-memory-brain-function-and-physical-fi/&quot;&gt;Study Finds Aerobic Exercise Improves Memory, Brain Function and Physical Fitness&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;meditation-and-buddhism&quot;&gt;Meditation and buddhism&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2018-05-20-productivity/zen.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;For a long time I suffered from anger management issues, depression, and
struggled to understand things outside of my context (what’s called “think out
of the box”) because I wasn’t aware of my own self and my surroundings, and just
seemed to let myself go with the flow, like a dead fish.&lt;/p&gt;

&lt;p&gt;I came in contact with Buddhism a good 10 years ago, and it has literally
changed my life profoundly. I follow the Zen branch of Buddhism, which is the
one that’s less concerned in deities and religious figures, and instead focuses
heavily on the practice of meditation. Zazen is the primary meditative practice
of Zen Buddhism, and it’s generally referred to as sitting in silence, as a
means of insight into the nature of existence. There are many meditation
methods, and one in particular I tend to follow is Anapanasati, which literally
means “mindfulness of inhalation and exhalation”, or the practice of watching
your own breath. This is the most well known and probably the easiest technique
to apply for beginners. There are many books and videos on the topic, but
basically it helped me manage my emotions, focus my energy and not waste so much
time procrastinating, among other things.&lt;/p&gt;

&lt;h2 id=&quot;avoid-overconfidence&quot;&gt;Avoid overconfidence&lt;/h2&gt;

&lt;p&gt;It’s often easy to fall prey to overconfidence, just skimming through the notes
and thinking you know everything, because you can see it all written right
before your eyes. But if you take solved exams, cover the solutions with a piece
of paper, and try solving them without peeking at the solutions, it becomes very
difficult, especially if you have not mastered the topic at hand. This is solved
by practising, using flashcards and the Method of Ioci, for example.&lt;/p&gt;

&lt;p&gt;You can also take solved exams and work through them with the same restrictions
you’d have in a real exam: time limit, no notes (well, depending on your
professor’s rules, some of my college teachers would actually allow us to carry
our notebooks, including textbooks and problem sets), and, when you’re done,
grade yourself honestly, and see how you did compared to the provided answers.&lt;/p&gt;

&lt;p&gt;If your professors don’t release solved exams, you can, most of the time, pick
up books from the library with solved problem sets. And best of all, you can
create your own problem sets to challenge your knowledge. Try to solve them
without the course material, and then solve them again using the material
provided, calculators and theory.&lt;/p&gt;

&lt;h2 id=&quot;get-to-know-appreciate-and-love-yourself&quot;&gt;Get to know, appreciate and love yourself&lt;/h2&gt;

&lt;p&gt;This may seem obvious, but you need to know yourself, your skills, limits, and
be honest with what you’re good and bad at (and improve your shortcomings!). And
most importantly, don’t beat yourself for not being good enough. Nobody is born
knowing everything. It’s true some people have some learning advantages compared
to you, and some other people also have disabilities. Don’t let that stop you
from pushing yourself to the limit, and becoming a better yourself tomorrow than
you were yesterday. There’s only one way, and that way is forward.&lt;/p&gt;

&lt;h2 id=&quot;passion-and-ambition&quot;&gt;Passion and ambition&lt;/h2&gt;

&lt;p&gt;I’m very passionate, and I’ve always strived for the best, giving the most of
myself in whatever it is I’m doing. I’m determined to leave a positive impact in
this world, that will last for long after I’m gone. And the only way to achieve
this is to be determined to improve yourself every day, to see the best in
yourself and others, and not settle for less. I believe people without passion
cannot achieve success in life. Because, to be successful, you first have to
want it. And not just wish it passively, but work on your goals and dreams every
day. Fortunately, in this day and age, it’s easy to find your passion, and
pursue it into college. In Europe, education is cheap and of great quality. In
the USA, education is not that cheap, but you can get grants. In general, the
quality of the national educational systems have improved vastly worldwide, and
with the introduction of the Internet, Wikipedia and MOOCs, it’s easier than
ever to achieve knowledge excellence, even for free. Like a certain brand of
sport clothing says: “Just do it.”. Excuses are for quitters.&lt;/p&gt;

&lt;h1 id=&quot;learn-more&quot;&gt;Learn more&lt;/h1&gt;

&lt;p&gt;There are lots of books and courses dedicated to teaching you to become a better
and more efficient learner. I’ve reviewed some of them, and most of my findings
and insight comes from them. Over the years I’ve also developed some personal
techniques that I have enumerated, but bear in mind, they work for me, and they
dont necessarily have to apply to you. It would be a much better idea to develop
your own techniques based on your own experience and insight: much like I did.&lt;/p&gt;

&lt;p&gt;Here are my references:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;“A Mind For Numbers: How to Excel at Math and Science (Even If You Flunked
Algebra)” by Barbara Oakley - Sounds great, doesn’t it? Well, it works even
better.&lt;/li&gt;
  &lt;li&gt;“Deep Work” by Cal Newport - The same guy who
presents the MIT Challenge video above. Highly passionate guy, very recommended.&lt;/li&gt;
  &lt;li&gt;“How to become a Straight-A Student” by Cal Newport&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.coursera.org/learn/learning-how-to-learn&quot;&gt;Learning How to Learn&lt;/a&gt; - Coursera&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=dbh5l0b2-0o&quot;&gt;Athene’s Theory of Everything&lt;/a&gt; - Youtube&lt;/li&gt;
&lt;/ul&gt;</content><author><name>León Castillejos</name><email>L1Cafe-github@tuta.io</email></author><category term="tip" /><summary type="html">In the past, I used to struggle with my productivity, no matter how hard I seemed to study, my grades didn’t reflect it. I was quite stubborn in believing I wasn’t at fault, like some kind of genius who nobody understood, and reading quotes like this one certainly didn’t help me understand it was actually my problem. I was in denial.</summary></entry><entry><title type="html">My favourite Visual Studio Code extensions</title><link href="https://l1cafe.github.io/2018/05/14/my-vscode-extensions" rel="alternate" type="text/html" title="My favourite Visual Studio Code extensions" /><published>2018-05-14T18:28:03+02:00</published><updated>2018-05-14T18:28:03+02:00</updated><id>https://l1cafe.github.io/2018/05/14/my-vscode-extensions</id><content type="html" xml:base="https://l1cafe.github.io/2018/05/14/my-vscode-extensions">&lt;p&gt;At first, I really disliked Electron and JS-based text editors, like Atom and
VSCode, but after learning Vim, and finding many problems with my plug-ins, on
different languages (such as MIPS assembly, Java and VHDL), I decided to give
VSCode a try, and I have been very impressed by how well Visual Studio Code
works. It’s much faster than JS-based editors used to be, it has amazing
community support, and I’m generally faster, and more productive using it. It 
has fixed a lot of its shortcomings, like its speed.&lt;/p&gt;

&lt;p&gt;So it’s been a few months since I first started using VSCode, and I found a few
extensions that I really like now and use often. Here are some of them:&lt;/p&gt;

&lt;h1 id=&quot;auto-close-tag&quot;&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=formulahendry.auto-close-tag&quot;&gt;Auto Close Tag&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;https://L1Cafe.github.io/assets/images/2018-05-14-my-vscode-extensions/autoclosetag.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Very useful extension for web development.&lt;/p&gt;

&lt;h1 id=&quot;beautify&quot;&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=HookyQR.beautify&quot;&gt;Beautify&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;Much more powerful than the js-beautify built into VSCode.&lt;/p&gt;

&lt;h1 id=&quot;better-comments&quot;&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=aaron-bond.better-comments&quot;&gt;Better Comments&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;https://L1Cafe.github.io/assets/images/2018-05-14-my-vscode-extensions/bettercomments.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;When a project size grows, keeping track of things to do, questions, and other
special comments you leave in the code to improve readability can quickly become
a challenge. This extension essentially proposes a few tiers of comments you
can use to categorise comments and notes, so it’s easier to keep track of them.&lt;/p&gt;

&lt;h1 id=&quot;code-runner&quot;&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=formulahendry.code-runner&quot;&gt;Code Runner&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;This extension supports running code with custom commands, as well as running
fragments of source code in a file, for lots of programming languages.&lt;/p&gt;

&lt;h1 id=&quot;devskim&quot;&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=MS-DevSkim.vscode-devskim&quot;&gt;DevSkim&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;Great extension that detects lots of common mistakes that may result in security
issues, such as plain HTTP links, secrets and tokens stored in plain text,
 disabled certificate validation, and so on.&lt;/p&gt;

&lt;h1 id=&quot;docker&quot;&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=PeterJausovec.vscode-docker&quot;&gt;Docker&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;https://L1Cafe.github.io/assets/images/2018-05-14-my-vscode-extensions/docker.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Adds functionality for automatic Dockerfile generation, syntax highlighting
for docker files, IntelliSense, linting, the ability to deploy images
directly from VSCode and more.&lt;/p&gt;

&lt;h1 id=&quot;editorconfig&quot;&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=EditorConfig.EditorConfig&quot;&gt;EditorConfig&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;This extension is based on the &lt;a href=&quot;http://editorconfig.org&quot;&gt;EditorConfig&lt;/a&gt; standard
which aims to maintain consistency across environments where code is shared,
even when different people editing the same file are using different editors,
by abstracting and overriding common settings such as tab spacing, charsets, and
such.&lt;/p&gt;

&lt;h1 id=&quot;git-history&quot;&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=donjayamanne.githistory&quot;&gt;Git History&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;https://L1Cafe.github.io/assets/images/2018-05-14-my-vscode-extensions/git_history.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Allows you to browse any git repository graphically, compare branches, commits,
as well as perform merges, revert commits, view GitHub avatars…&lt;/p&gt;

&lt;h1 id=&quot;git-lens&quot;&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens&quot;&gt;Git Lens&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;Adds many features, like inline blame (to see who edited what line, and when), 
opening commit directly in GitHub, view diff from commit and current file, and 
more.&lt;/p&gt;

&lt;h1 id=&quot;gruvbox-themes&quot;&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=tomphilbin.gruvbox-themes&quot;&gt;Gruvbox Themes&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;https://L1Cafe.github.io/assets/images/2018-05-14-my-vscode-extensions/gruvbox.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Definitely my favourite theme: The light version is not completely white, but 
beige, which is much more pleasant to see even in dark environments, but it also
 ships with a dark theme which uses the same color scheme. It has good contrast 
while at the same time not being soft enough to use for hours on end.&lt;/p&gt;

&lt;h1 id=&quot;ip-address&quot;&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=Compulim.vscode-ipaddress&quot;&gt;IP Address&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;https://L1Cafe.github.io/assets/images/2018-05-14-my-vscode-extensions/ip.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Shows your IP address in the status bar, which helps greatly when using a laptop
 and moving around often, as you don’t need to pull up a terminal or a web 
browser to check your IP.&lt;/p&gt;

&lt;h1 id=&quot;jekyll-snippets&quot;&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=ginfuru.vscode-jekyll-snippets&quot;&gt;Jekyll Snippets&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;Helpful when dealing with Jekyll websites (did you know this website runs on 
Jekyll and is completely static?) which is my favourite static site generator. 
Adds features such as syntax highlighting for Jekyll Front Matter, as well as 
ERB snippets.&lt;/p&gt;

&lt;h1 id=&quot;nightswitch-lite&quot;&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=gharveymn.nightswitch-lite&quot;&gt;NightSwitch-Lite&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;Toggles to light/dark themes as specified in your configuration automatically 
based on the time of day and location, but it also allows to manually set the 
switching time.&lt;/p&gt;

&lt;h1 id=&quot;vim&quot;&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=vscodevim.vim&quot;&gt;Vim&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;Adds modal editing, Vim shortcuts, command remapping, and some popular Vim 
plugins like EasyMotion, Surround, and such.&lt;/p&gt;</content><author><name>León Castillejos</name><email>L1Cafe-github@tuta.io</email></author><category term="software-dev" /><category term="Microsoft" /><summary type="html">At first, I really disliked Electron and JS-based text editors, like Atom and VSCode, but after learning Vim, and finding many problems with my plug-ins, on different languages (such as MIPS assembly, Java and VHDL), I decided to give VSCode a try, and I have been very impressed by how well Visual Studio Code works. It’s much faster than JS-based editors used to be, it has amazing community support, and I’m generally faster, and more productive using it. It has fixed a lot of its shortcomings, like its speed.</summary></entry><entry><title type="html">Why I use a MacBook</title><link href="https://l1cafe.github.io/2017/04/07/why-i-use-a-macbook" rel="alternate" type="text/html" title="Why I use a MacBook" /><published>2017-04-07T19:26:48+02:00</published><updated>2017-04-07T19:26:48+02:00</updated><id>https://l1cafe.github.io/2017/04/07/why-i-use-a-macbook</id><content type="html" xml:base="https://l1cafe.github.io/2017/04/07/why-i-use-a-macbook">&lt;p&gt;In this article, I want to explain why I use a MacBook. I am convinced it is the superior desktop OS, but I also think everyone should use what suits them. In my case, that would be macOS.&lt;/p&gt;

&lt;h1 id=&quot;its-familiar&quot;&gt;It’s familiar&lt;/h1&gt;

&lt;p&gt;Even though I’ve been using macOS for less than 6 months so far, I find it a very familiar and comfortable experience. Apart from the GUI, which may take a little bit to get used to, the OS is Unix-like. It ships with bash, vim, and many POSIX utilities, this means I can apply my ample experience with Unix-like OSes, such as different Linux and BSD distributions.&lt;/p&gt;

&lt;h1 id=&quot;lots-of-commercial-software-available&quot;&gt;Lots of commercial software available&lt;/h1&gt;

&lt;p&gt;I love and use Linux regularly. I think it’s a very solid operating system for the desktop, but the truth is… It just doesn’t suit my needs sometimes. Sure, there are open-source alternatives to most commercial software, for example, GIMP is an Adobe Photoshop alternative, LMMS is a Fruity Loops/Logic Pro alternative, Inkscape is an Adobe Illustrator alternative, LibreOffice is a Microsoft Office alternative… But the reality is that these tools aren’t up to speed and lack many features that make working with them unproductive. One example is the lack of non-destructive filters on GIMP, LMMS doesn’t have nearly as many third party commercial plug-ins as the other two, LibreOffice has a TERRIBLE user interface (although this seems to be improving), and this lack of features is generally true for most open-source software. Even if I like open-source, and really want to use it and discard closed-source software, it simply doesn’t work for me. I’m less productive on open-source software than on their closed-source counterparts.&lt;/p&gt;

&lt;h1 id=&quot;great-trackpad&quot;&gt;Great trackpad&lt;/h1&gt;

&lt;p&gt;MacBooks have brilliant trackpads. Considering they are the primary input device on laptops, this is a huge deal. Before this MacBook, I used to carry a little mouse around because that trackpad was simply atrocious. Now I like it so much, I actually prefer it. It’s much more precise, and with its huge surface area combined with accurate palm rejection, I really have no need for a mouse.&lt;/p&gt;

&lt;h1 id=&quot;usb-c-all-the-things&quot;&gt;USB-C all the things!&lt;/h1&gt;

&lt;p&gt;People complain because this laptop has no “normal USB ports”. What they are referring to is “USB type A ports”, which are very badly designed (non-reversable), big, bulky, and obsolete. USB-C (actually, Thunderbolt 3), supports Ethernet networking, power delivery, video output, USB 3.1, digital and analog audio… I can charge my computer or output video from any of the 4 ports. USB-C is the future, and a USB-C to USB-A adaptor isn’t expensive, in case I need to use legacy hardware. I want this laptop to last me a while. In 5 years, nobody will be using USB-A, and people will carry that port on their older laptops like some still carry VGA, HDMI and ethernet ports around.Thunderbolt 3 does all this and much more, including external GPUs.&lt;/p&gt;

&lt;h1 id=&quot;theres-no-linux-laptop-alternative&quot;&gt;There’s no Linux laptop alternative&lt;/h1&gt;

&lt;p&gt;I paid good money for this laptop, but I’m very willing to pay even more for a better Linux laptop. It simply does not exist. Sure, there are companies like System76 which build very powerful laptops, but, let’s be honest, their design is ugly as hell. And, after a little investigation, I found that other laptops may outperform the Mac in a certain area, but not all. For example: One might be better at battery, but only because it has a Core i7 U CPU, which offers poor performance for my needs. Other computer might have a beefier GPU, but also be much more thicker, I carry this laptop everyday and I don’t appreciate any extra weight, my back suffers. Other laptop could have a much higher resolution 4K touch screen, but also be made out of creaky plastic. Hell no!&lt;/p&gt;

&lt;p&gt;So, I love POSIX and Unix, and this is as close as I can get while also owning good quality hardware. I don’t wish to use Windows. Windows is an objectively inferior OS, and Microsoft’s pathetic attempts at attracting Linux users by including a Bash shell and some other stuff are definitely not enticing me to use Windows if I can help it.&lt;/p&gt;

&lt;h1 id=&quot;apple-is-global&quot;&gt;Apple is global&lt;/h1&gt;

&lt;p&gt;Where I live, the only Microsoft Surface product I can buy are the non-Book variants. There are very good Samsung laptops, but they don’t sell in Europe anymore. Razer has a great laptop: The Razer Blade Stealth, but, again, not available in Spain. Asus, MSI, only sell a few laptops, and, to be honest, their lineup is insane: too many models to choose from, where Apple only offers a few base models, with customisations. Sure, I could probably buy them through Amazon, but I want to buy them on their respective official stores, directly. Even if that means paying a little bit more in shipping prices, I really don’t want to deal with a third party. Apple allows me to buy every single product on their line-up, both online, and in a physical Apple store. Apple allows me to configure my product with a US ANSI keyboard, which, in my opinion, is a must for us programmers, and that’s what I have done.&lt;/p&gt;

&lt;p&gt;The only real alternative I have to this MacBook Pro is one of the newest Dell XPS 15, which I can buy on their official online store, but I finally decided on the MacBook Pro because the XPS 15 only supports Windows officially (the Developer Edition, which runs Ubuntu, is an XPS 13 model, too small for my needs).&lt;/p&gt;

&lt;h1 id=&quot;its-well-designed&quot;&gt;It’s well designed&lt;/h1&gt;

&lt;p&gt;The model I own, the MacBook Pro 2016 15 inch with Touch Bar, has received very tough criticism for a few things, and I would like to comment on that:&lt;/p&gt;

&lt;h2 id=&quot;battery-life&quot;&gt;Battery life&lt;/h2&gt;

&lt;p&gt;This machine has received lots of hate due to some people claiming ridiculous battery runtimes: As low as 4 hours of continuous use. Battery life was something Apple used to be proud of, MacBooks have always maintained a great balance of processing power, and thickness, so some people were worried and annoyed this MacBook performed worse than before.&lt;/p&gt;

&lt;p&gt;This has not been my experience, however. This machine lasts me from 8 to 11 hours of usage, editing code, compiling, and even opening virtual machines, but it’s true that when I use the GPU intensively, battery life decreases significantly faster than before, this is because the GPU is a very power-hungry AMD card, which, by the way, also produces a lot of heat, that must be quickly dissipated by the integrated fans. This is expected behaviour, as GPUs consume more power than CPUs when working hard, so, if you’re editing video, you’ll see worse battery life, obviously, but, think again: Do you &lt;strong&gt;REALLY&lt;/strong&gt; need to edit video on the go? If I were to edit video, I’d be in a room, with a wall plug nearby, probably, so I don’t think this is an issue.&lt;/p&gt;

&lt;h2 id=&quot;butterfly-2-keyboard&quot;&gt;Butterfly 2 keyboard&lt;/h2&gt;

&lt;p&gt;When the Apple Butterfly keyboard mechanism was first launched (on the standard MacBook), many people disliked it due to the lack of feedback: Me included. It feels as if you were typing on a glass surface, and because there’s basically no key travel, fingers hurt after a while in my experience, due to the fingers constantly hitting a hard surface. Butterfly 2 is much different, though. It has a very satisfying, but not obnoxiously loud clicking feel. The key travel has been improved, although not dramatically, but enough for me to love it. I’m starting to like it even more than my Cherry Red mechanical keyboard, and I’ve used this for more than 10 years now! I would definitely like to see this mechanism on more keyboards.&lt;/p&gt;

&lt;h2 id=&quot;touch-bar&quot;&gt;Touch Bar&lt;/h2&gt;

&lt;p&gt;Not only it allows you to perform certain quick commands easier (such as clicking “OK” or “cancel” on typical dialog boxes, accessing your bookmarked sites on Safari, switching tools on Affinity Photo, Pixelmator, Apple Pages, Microsoft Word, etc), but it also adds an extra layer of security. Because the Touch Bar has its own isolated CPU, it cannot be infected by normal means, and only talks to the OS through a dedicated bus (USB I believe), it means authentication dialogs cannot be forged, especially the ones that ask for your fingerprint, like on the App Store, which, by the way, is a very fast and convenient way of authenticating the user, and also allows for quick unlocking.&lt;/p&gt;

&lt;p&gt;The lack of function keys is irrelevant, as the Touch Bar provides a far quicker and flexible way of operating the computer.&lt;/p&gt;

&lt;h2 id=&quot;it-simply-is-pretty&quot;&gt;It simply is pretty&lt;/h2&gt;

&lt;p&gt;The truth is that design is a very important part of productivity: a study found that when people worked in well designed offices, and used nicely designed hardware and appliances, were much more productive than on ugly environments and devices.&lt;/p&gt;</content><author><name>León Castillejos</name><email>L1Cafe-github@tuta.io</email></author><category term="opinion" /><category term="Apple" /><summary type="html">In this article, I want to explain why I use a MacBook. I am convinced it is the superior desktop OS, but I also think everyone should use what suits them. In my case, that would be macOS.</summary></entry><entry><title type="html">Password managers</title><link href="https://l1cafe.github.io/2017/03/21/password-managers" rel="alternate" type="text/html" title="Password managers" /><published>2017-03-21T19:29:29+01:00</published><updated>2017-03-21T19:29:29+01:00</updated><id>https://l1cafe.github.io/2017/03/21/password-managers</id><content type="html" xml:base="https://l1cafe.github.io/2017/03/21/password-managers">&lt;p&gt;The Internet nowadays is a very messy place. Identity theft, e-mail confirmations, instant notifications, mobile devices, multiple accounts, data leaks, account dumps, service breaches, malware that steals your bank’s information, scammers, identity theft…&lt;/p&gt;

&lt;p&gt;If you have ever read basic security and privacy tips you might be aware of some basic points:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Don’t share your password with anyone, especially people claiming to be employees of these companies.&lt;/li&gt;
  &lt;li&gt;Always use hard to guess and long passwords, combining symbols, uppercase and lowercase letters, numbers, and never reuse them across services.&lt;/li&gt;
  &lt;li&gt;Don’t use obvious passwords such as your e-mail address, your name, your wife’s name, your birthdate or words like “password” or “1234”.&lt;/li&gt;
  &lt;li&gt;Enable two factor authentication when possible, this adds an extra layer which, in case your password gets stolen, will make it more difficult to gain unauthorised access to your account.&lt;/li&gt;
  &lt;li&gt;Do a regular check-up of your online accounts, and change passwords.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;These tips, while valid, are sometimes difficult to accomplish. Nowadays, almost every online service asks us to make an account, so that will be another new password we’ll need to remember. As we sign up for more and more services, this becomes more and more unlikely until we reach the point of simply using the same password or using variations that are difficult for computers to guess but easy for human attackers, like changing Os for zeroes, or intentionally misspelling words (like writing “twtter” instead of “twitter”). This is not very wise, but fortunately, we have a better tool: password managers.&lt;/p&gt;

&lt;p&gt;In this article, I will summarise a few options regarding password management, sorted by popularity ranking as per &lt;a href=&quot;https://alternativeto.net/&quot;&gt;AlternativeTo&lt;/a&gt; ratings.&lt;/p&gt;

&lt;h2 id=&quot;the-most-well-known&quot;&gt;The most well known&lt;/h2&gt;

&lt;h3 id=&quot;lastpass&quot;&gt;&lt;a href=&quot;https://www.lastpass.com/&quot;&gt;LastPass&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;https://L1Cafe.github.io/assets/images/2017-03-21-password-managers/lastpass.png&quot; alt=&quot;LastPass' interface&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Probably the most famous password manager. Released in 2008, their team of experts deliver a cross-platform experience, with extensions for the most used browsers, but also for less well known browsers like Vivaldi, Maxthon or Dolphin. Can work independently of the operating system because it can be used as a browser extension, so all you need is a compatible browser, and you can carry your passwords wherever you go. There are also applications for Android, iPhone, iPad, Windows Phone, etc. The premium plan, at 1 USD/month is rather affordable. It also has a few extra features, such as one that watches websites for breaches and notifies you if you have a stored password for a website that may have been compromised, or a password change wizard that allows for semi-automated fast password changing in supported sites that requires very little manual intervention.&lt;/p&gt;

&lt;h4 id=&quot;pros&quot;&gt;Pros&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Well established&lt;/li&gt;
  &lt;li&gt;Unified experience across devices&lt;/li&gt;
  &lt;li&gt;Cloud sync&lt;/li&gt;
  &lt;li&gt;Free plan&lt;/li&gt;
  &lt;li&gt;Auto-fill features&lt;/li&gt;
  &lt;li&gt;Can store encrypted files (with limits depending on the plan)&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;cons&quot;&gt;Cons&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Closed source, so it cannot be independently audited&lt;/li&gt;
  &lt;li&gt;Cloud-based, local storage or third party sync (like Dropbox) is not feasible&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;keepass&quot;&gt;&lt;a href=&quot;http://keepass.info/&quot;&gt;KeePass&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;https://L1Cafe.github.io/assets/images/2017-03-21-password-managers/keepass.png&quot; alt=&quot;KeePass' interface&quot; /&gt;&lt;/p&gt;

&lt;p&gt;It isn’t exactly an application, but rather, a standard. The application is completely open source and the most used implementation (KeePass), uses the .Net framework on Windows, and Mono on macOS and Linux. Because of its open nature, there are lots of third party implementations such as KeePassX (which uses Qt, much more desirable for non-Windows machines), KeePassDroid, and others. It is absolutely free to use, forever, and it doesn’t carry a service or cloud with it: it focuses exclusively on password vaults as files. These files can then be easily synchronised using Dropbox, Resilio Sync, or your cloud storage tool of choice. These vaults are encrypted and they can be tuned to use stronger encryption (increasing the open delay, and decreasing the effectiveness of brute-force attacks). KeePass/X allows specifying a key file, a password, or a combination of both, making it a multi-factor solution. There are third party ports for Android, iOS, Windows Phone, Windows Mobile, and even web apps.&lt;/p&gt;

&lt;h4 id=&quot;pros-1&quot;&gt;Pros&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Completely open source&lt;/li&gt;
  &lt;li&gt;Cross-platform&lt;/li&gt;
  &lt;li&gt;Fully free&lt;/li&gt;
  &lt;li&gt;(Partly) audited&lt;/li&gt;
  &lt;li&gt;Rudimentary auto-fill&lt;/li&gt;
  &lt;li&gt;Allows storing arbitrary files inside the database&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;cons-1&quot;&gt;Cons&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Does not have cloud sync&lt;/li&gt;
  &lt;li&gt;Notably uglier than other solutions&lt;/li&gt;
  &lt;li&gt;Third party implementations sometimes lack minor functionality&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;1password&quot;&gt;&lt;a href=&quot;https://1password.com/&quot;&gt;1Password&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;https://L1Cafe.github.io/assets/images/2017-03-21-password-managers/1password.png&quot; alt=&quot;1Password's interface&quot; /&gt;&lt;/p&gt;

&lt;p&gt;1Password has long been the prettiest of the bunch. It offers both a subscription based service, and allows paying a single time for a major version and subsequent updates. It has apps for Windows, and Mac, along with Android and iOS, and ships primarily as an app, rather than as a plug-in (although, browser plug-ins are available for integration). It supports a few OS specific features, such as the Touch Bar and the Touch ID on macOS and iOS, fingerprint authentication on Android, and, like LastPass, it has a service that watches for data breaches.&lt;/p&gt;

&lt;h4 id=&quot;pros-2&quot;&gt;Pros&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Very well-designed interface&lt;/li&gt;
  &lt;li&gt;Allows for both cloud and local storage&lt;/li&gt;
  &lt;li&gt;Can store files&lt;/li&gt;
  &lt;li&gt;Auto-fill features&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;cons-2&quot;&gt;Cons&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;A bit pricier than its alternatives, no free plan&lt;/li&gt;
  &lt;li&gt;No other desktop OS support besides Windows or macOS&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;other-alternatives&quot;&gt;Other alternatives&lt;/h2&gt;

&lt;p&gt;While less known, there are other ways to manage your passwords.&lt;/p&gt;

&lt;h3 id=&quot;encryptr&quot;&gt;&lt;a href=&quot;https://spideroak.com/personal/encryptr&quot;&gt;Encryptr&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;https://L1Cafe.github.io/assets/images/2017-03-21-password-managers/encryptr.png&quot; alt=&quot;Encryptr's interface&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Tiny little app that allows for fast password management. It’s clean-looking, and it’s cloud-based, so you’ll never lose your passwords. It’s cross-platform and it uses the Electron framework to bring a unified experience across operating systems. It has apps for Windows, Linux, macOS, as well as Android, iOS. It’s free and open source. Doesn’t allow storing files, only plain text.&lt;/p&gt;

&lt;h3 id=&quot;enpass&quot;&gt;&lt;a href=&quot;https://www.enpass.io/&quot;&gt;Enpass&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;https://L1Cafe.github.io/assets/images/2017-03-21-password-managers/enpass.png&quot; alt=&quot;Enpass' interface&quot; /&gt;&lt;/p&gt;

&lt;p&gt;A newcomer to the password management industry. It is completely free to use on desktop (Windows, macOS, Linux), but its mobile apps (Android, iOS, Blackberry, Windows Phone, Android Wear, Apple Watch) have a one-time fee. It looks good and allows for both local and third party cloud-based storage. Supports Windows Hello, Touch ID, Android fingerprint, etc.&lt;/p&gt;

&lt;h3 id=&quot;true-key&quot;&gt;&lt;a href=&quot;https://www.truekey.com/&quot;&gt;True Key&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;https://L1Cafe.github.io/assets/images/2017-03-21-password-managers/truekey.jpg&quot; alt=&quot;True Key's interface&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Backed by Intel, it features biometric authentication, and is free for up to 15 passwords. After that, it requires a yearly subscription to use on Windows, macOS, iOS, and Android.&lt;/p&gt;

&lt;h3 id=&quot;master-password&quot;&gt;&lt;a href=&quot;http://masterpasswordapp.com/&quot;&gt;Master Password&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;https://L1Cafe.github.io/assets/images/2017-03-21-password-managers/masterpassword.png&quot; alt=&quot;Master Password's interface&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This one is a bit different. Instead of saving passwords in a file database or saving them on the cloud, it generates your passwords based on your master password, name, and website, so it never stores data.&lt;/p&gt;</content><author><name>León Castillejos</name><email>L1Cafe-github@tuta.io</email></author><category term="opinion" /><category term="passwords" /><summary type="html">The Internet nowadays is a very messy place. Identity theft, e-mail confirmations, instant notifications, mobile devices, multiple accounts, data leaks, account dumps, service breaches, malware that steals your bank’s information, scammers, identity theft…</summary></entry><entry><title type="html">Don’t share Microsoft Office documents: use open formats</title><link href="https://l1cafe.github.io/2017/03/21/don-t-share-microsoft-office-documents-use-open-formats" rel="alternate" type="text/html" title="Don't share Microsoft Office documents: use open formats" /><published>2017-03-21T18:59:32+01:00</published><updated>2017-03-21T18:59:32+01:00</updated><id>https://l1cafe.github.io/2017/03/21/don-t-share-microsoft-office-documents-use-open-formats</id><content type="html" xml:base="https://l1cafe.github.io/2017/03/21/don-t-share-microsoft-office-documents-use-open-formats">&lt;p&gt;It’s very common, in certain situations, to share OOXML files such as .docx from Microsoft Word and .pptx from Microsoft PowerPoint. I’ve seen this happen most often in schools, universities, and educational institutions in general. I will try to explain why this is generally a bad idea.&lt;/p&gt;

&lt;p&gt;It’s not the first, and probably won’t be the last time, people complain about OOXML, Microsoft Office, and their dirty tricks. Here’s a few references in no particular order: &lt;a href=&quot;http://www.consortiuminfo.org/standardsblog/article.php?story=20070117145745854&quot;&gt;consortiuminfo.org&lt;/a&gt;, &lt;a href=&quot;https://www.gnu.org/philosophy/no-word-attachments.en.html&quot;&gt;GNU&lt;/a&gt;, &lt;a href=&quot;https://www.fsf.org/campaigns/opendocument/reject&quot;&gt;FSF&lt;/a&gt;, &lt;a href=&quot;http://stephesblog.blogs.com/my_weblog/2007/08/microsofts-fail.html&quot;&gt;stephesblog.blogs.com&lt;/a&gt;, &lt;a href=&quot;https://arstechnica.com/information-technology/2008/02/ibm-responds-to-microsoft-ooxml-is-technically-inferior/&quot;&gt;Ars Technica&lt;/a&gt;, &lt;a href=&quot;http://www.goldmark.org/netrants/no-word/attach.html&quot;&gt;GoldMark&lt;/a&gt;, &lt;a href=&quot;https://logological.org/word&quot;&gt;Tristan Miller&lt;/a&gt;… The list could go on and on forever, but I think the links provided make valid points. Now It’s my turn:&lt;/p&gt;

&lt;h1 id=&quot;its-formatting-is-not-consistent&quot;&gt;Its formatting is not consistent&lt;/h1&gt;

&lt;p&gt;Microsoft’s own OOXML format isn’t designed to be consistent across all platforms and applications. While it definitely is an open format, some critics claim that its standard specification is too long to be implemented realistically. Moreover, even Microsoft doesn’t respect its own standard in a consistent manner across their Microsoft Office releases. This means that a document produced with Microsoft Word 2007 is likely to have inconsistencies when opened in a newer version such as Microsoft Word 2016. The truth is that, while Microsoft tries to insert features in newer Office releases that maintain a certain degree of retrocompatibility, this often introduces an inferior solution in the form of a workaround. What’s worse, this situation, when handled by a third party such as Apple (With Apple Pages, for example), or free software office suites such as LibreOffice, will increase the cost of maintenance, and it’s very likely the workaround will not be as effective as Microsoft’s implementation for practical reasons.&lt;/p&gt;

&lt;h1 id=&quot;third-party-support-isnt-great&quot;&gt;Third party support isn’t great&lt;/h1&gt;

&lt;p&gt;Related to the above point, to correctly display OOXML files you’re going to need the latest version of Microsoft Office (which isn’t free as in beer or as in freedom), or one of the Office documents viewing tools Microsoft provides at no extra charge (this is only for Windows though, macOS users are left in the dark). If you have ever tried to view a Microsoft Word-produced document in Apple Pages or LibreOffice Writer, you probably know it will not be pixel-perfect (some images might be offset, text fonts might not display correctly unless you have the same font set, margins and some special formatting could be configured incorrectly, etc). This also happens vice versa: Apple Pages-produced OOXML documents opened in Microsoft Word, or even LibreOffice Writer. However, PDF (Portable Document Format) is a fully open specification, it’s universal, and can be viewed in any modern operating system without additional software (even modern browsers ship with PDF viewers built in).&lt;/p&gt;

&lt;h1 id=&quot;its-openness-is-debatable&quot;&gt;Its openness is debatable&lt;/h1&gt;

&lt;p&gt;While the format itself is an open specification, Microsoft has a long record of using the &lt;a href=&quot;https://en.wikipedia.org/wiki/Embrace%2C_extend_and_extinguish&quot;&gt;EEE&lt;/a&gt; strategy to marginalise and neutralise competition. This means that, while they might release something that looks like an open standard anyone can adopt, the truth is that OOXML is &lt;a href=&quot;http://www.sutor.com/newsite/blog-open/?p=2069&quot;&gt;too hard to implement, even for Microsoft&lt;/a&gt;. While other office suites can adopt OOXML formats, Microsoft Office can always add new features that break compatibility with these office suites that don’t implement them.&lt;/p&gt;

&lt;h1 id=&quot;they-can-contain-malware-in-the-form-of-macros&quot;&gt;They can contain malware in the form of macros&lt;/h1&gt;

&lt;p&gt;This is a well known fact by malware designers, information security professionals, and most software engineers. This is such a commonly known fact that Microsoft Office, by default, opens unknown origin documents in read-only mode, disabling macros, and warns users in multiple ways of allowing edits on these documents. Warnings that are, by the way, typically dismissed by inexperienced users.&lt;/p&gt;

&lt;h1 id=&quot;editing-shared-documents-is-often-unnecessary&quot;&gt;Editing shared documents is often unnecessary&lt;/h1&gt;

&lt;p&gt;When sharing an OOXML document, the receiver will have a file they can easily edit or modify. Therefore, when attaching invoices, or finished works, if you use the PDF format, the document will be displayed exactly the way you want it to be. Microsoft Office supports exporting to PDF in its latest versions, as well as LibreOffice and essentially most office suites, including Apple’s and Google’s.&lt;/p&gt;

&lt;h1 id=&quot;its-a-poor-choice-for-forms&quot;&gt;It’s a poor choice for forms&lt;/h1&gt;

&lt;p&gt;People sometimes use Office documents to send blank forms to be filled in by the recipient. This document passing forth and back is unnecessary, slow, and inconvenient. Where you could simply present a webpage with a form, and have a web server receive all that data in a manner that can be automatically stored into databases for further processing, encrypted for security, or analysed, the choice of using a document format that cannot facilitate automation seems rather an uninformed and suboptimal decision.&lt;/p&gt;

&lt;h1 id=&quot;microsoft-office-has-terrible-formula-support&quot;&gt;Microsoft Office has terrible formula support&lt;/h1&gt;

&lt;p&gt;When producing documents with math and physics formulas, Microsoft Office has a tool for inserting equations, however, this tool, while easy to use for sporadic situations, becomes a nightmare in terms of UX, because it’s too difficult to insert reasonably complex formulas using Microsoft Office’s system. The most reasonable option, and what most math university teachers and doctors use is LaTeX. LaTeX typically produces PDF documents, and has a very solid syntax, built on top of TeX. Both are open source typesetting systems that produce beautiful, solid, and consistent output and it’s the desirable choice for productivity. Here’s some more information on Word vs LaTeX: &lt;a href=&quot;http://web.mit.edu/klund/www/urk/texvword.html&quot;&gt;MIT&lt;/a&gt;, &lt;a href=&quot;https://www.researchgate.net/post/Why_LaTex_is_better_choice_than_Microsoft_Word&quot;&gt;ResearchGate&lt;/a&gt;,  &lt;a href=&quot;https://tex.stackexchange.com/questions/1756/why-should-i-use-latex&quot;&gt;StackExchange&lt;/a&gt;, &lt;a href=&quot;https://www.reddit.com/r/LaTeX/comments/26z3ii/why_is_latex_better_than_the_current_version_of/&quot;&gt;Reddit&lt;/a&gt;, &lt;a href=&quot;http://www.andy-roberts.net/writing/latex/benefits&quot;&gt;Andrew Roberts&lt;/a&gt;.&lt;/p&gt;</content><author><name>León Castillejos</name><email>L1Cafe-github@tuta.io</email></author><category term="opinion" /><category term="Microsoft" /><summary type="html">It’s very common, in certain situations, to share OOXML files such as .docx from Microsoft Word and .pptx from Microsoft PowerPoint. I’ve seen this happen most often in schools, universities, and educational institutions in general. I will try to explain why this is generally a bad idea.</summary></entry><entry><title type="html">Making an open source security system: part 1</title><link href="https://l1cafe.github.io/2017/03/21/making-an-open-source-security-system-part-1" rel="alternate" type="text/html" title="Making an open source security system: part 1" /><published>2017-03-21T18:45:54+01:00</published><updated>2017-03-21T18:45:54+01:00</updated><id>https://l1cafe.github.io/2017/03/21/making-an-open-source-security-system-part-1</id><content type="html" xml:base="https://l1cafe.github.io/2017/03/21/making-an-open-source-security-system-part-1">&lt;p&gt;It has been a while since I wanted to make an alarm system. This idea has been on my mind ever since I got an alarm from &lt;a href=&quot;http://www.chuango.com/english/&quot;&gt;Chuango&lt;/a&gt;. They are a burglar alarm vendor that releases kits you can install yourself. These kits communicate over wired and wireless connections, have no maintenance fees and have varying features depending on the kit chosen (some kits have GSM and PSTN, some others have WiFi, etc).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;First issue&lt;/strong&gt;: lack of encryption. After a little investigation I found out that, despite their claims on the official website, the communications with the wireless sensors were not encrypted.&lt;/p&gt;

&lt;p&gt;These devices use a standard 433 Mhz radio band, and communicate with a central alarm panel, that has GSM and PSTN features. The GSM in this control panel is GPRS, so, again, not very secure, because GPRS is vulnerable to somewhat easy attacks, can be spoofed, intercepted and decrypted, jammed, etc. I found this out after I ordered an SDR dongle and tuned it to the appropriate frequency. Their command sequences work as follows: Every device seems to have a unique identifier, that is sent right before the command. So, on every command sent from a remote, the remote sends its own ID, and the disarm/arm command. This works because the control panel, when pairing devices, reads the first part of the command and stores it in an internal database, so every time the control panel receives a command, it first compares the first part of the command, containing the ID, and if it matches what’s stored in memory, it executes the second part.&lt;/p&gt;

&lt;p&gt;My investigation suggests there are at least 9 remote commands: arm, partial arm (home arm), disarm, panic button, duress alarm, sensor trigger, low battery, tamper trigger, and finally, normal alarm.&lt;/p&gt;

&lt;p&gt;Some devices only listen for signals, like sirens, which are triggered on arming and disarming, and obviously on panic triggers and normal alarms.&lt;/p&gt;

&lt;p&gt;Some other devices only send signals, such as remote controls and presence sensors.&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;second issue&lt;/strong&gt; with these home alarms is that their GSM module isn’t really configurable, and seems to be making regular connections to (presumably) a control center you can access from a smartphone application. There is no way to disable network Internet connectivity unless the SIM card carrier offers this possibility (the alarm panel can be controlled through SMS).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Third issue&lt;/strong&gt; is that their PSTN (Public Switched Telephone Network), or basically, what’s known as “landline phones” feature is extremely intrusive and doesn’t respect the whitelisted phone number list, so anyone who dials in the PSTN phone number, will get 5 dial tones, and after that, the alarm’s PSTN will be triggered, letting anyone enter the code to set up the alarm, disarm, arm, and so on. This is both a good and a bad thing: Good because you can access your alarm from anywhere in the world you have access to a landline phone. Bad because it tends to interrupt conversations if you pick up before the 5th tone, or might interfere picking up after the 5th tone: It won’t stop talking, asking for a passcode, on regular intervals even when there’s another phone picked up in the line.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Fourth issue&lt;/strong&gt;: it’s not a very fully featured device and lacks modern functionality such as IoT connectivity, interoperability with other brands and devices, video feeds.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Fifth issue&lt;/strong&gt;: it’s not very reliable. The alarm will sometimes fail to be triggered on wireless sensors (I’m still investigating if this is a problem with the sensors themselves not sending the signal, but I do know that the PIR sensor doesn’t detect presence very well). The alarm panel is touch enabled, but sometimes stops responding to touch, so you can’t really interact with it.&lt;/p&gt;

&lt;p&gt;In general, it’s a device that might suit some people’s needs, but it isn’t very reliable. I believe that using open source hardware and software, and the help of the community, we can bring a new meaning to DIY alarm systems, and create a more reliable, modular, and customisable solution that will fit everyone’s need while staying as cheap as the hardware can get.&lt;/p&gt;

&lt;p&gt;I will soon start developing an alternative open source burglar alarm in &lt;a href=&quot;https://github.com/L1Cafe/SafeSpace&quot;&gt;GitHub&lt;/a&gt;. Based on Arduino, and maybe Raspberry Pi.&lt;/p&gt;</content><author><name>León Castillejos</name><email>L1Cafe-github@tuta.io</email></author><category term="project" /><summary type="html">It has been a while since I wanted to make an alarm system. This idea has been on my mind ever since I got an alarm from Chuango. They are a burglar alarm vendor that releases kits you can install yourself. These kits communicate over wired and wireless connections, have no maintenance fees and have varying features depending on the kit chosen (some kits have GSM and PSTN, some others have WiFi, etc).</summary></entry></feed>